{"version":3,"sources":["components/SideNav/index.js","components/Navbar-profile/index.js","utils/API.js","components/PlantHeader/index.js","components/PlantAttributes/index.js","components/PlantDetails/index.js","components/PlantCompanions/index.js","components/GrowingCalendar/index.js","components/PlantCombatives/index.js","components/PlantInformation/index.js","components/PlantDetailWrapper/index.js","pages/PlantDetail.js","components/Login/index.js","components/SignUp/index.js","components/Navbar/index.js","components/Wrapper/index.js","components/Jumbotron/index.js","components/BodyWrapper/index.js","components/Greeting/index.js","components/Intro/index.js","components/BodyContent/index.js","components/Footer/index.js","components/SearchBar/index.js","components/PlantCards/index.js","components/NewComerIns/index.js","pages/landing.js","components/ProfileHeader/index.js","components/ProfileSelector/index.js","components/AboutMe/index.js","components/ContactInfo/index.js","components/NotificationIcon/index.js","components/Notification/index.js","components/NotificationList/index.js","components/UpdateLogin/index.js","components/VirtualPlantEditModal/index.js","components/VirtualPlant/VirtualPlant.js","components/VirtualPlantAddModal/index.js","components/VirtualGarden/VirtualGarden.js","components/ProfileContent/index.js","components/ProfileBody/index.js","pages/Profile.js","components/TeamProfileCard/index.js","pages/teamProfile.js","components/FlowerDepartment/index.js","pages/flowers.js","components/FruitsDepartment/index.js","pages/fruits.js","components/VegetablesDepartment/index.js","pages/vegetables.js","components/HerbsDepartment/index.js","pages/herbs.js","App.js","serviceWorker.js","index.js"],"names":["SideNavBar","props","sideNavFirstName","firstName","sideNavLastName","lastName","sideNavProfilePic","profilepic","sideNavCoverPhoto","coverphoto","sideNavEmail","username","react_default","a","createElement","lib","className","trigger","options","closeOnClick","edge","userView","user","background","image","name","email","waves","Link","to","divider","onClick","handleLogout","class","NavbarProfile","brand","right","hover","style","fontWeight","SideNav","password","phone","zipcode","city","st","aboutme","API","getPlants","axios","get","getAPlant","id","getCategory","category","deletePlant","delete","savePlant","plantData","post","searchPlants","inputCategory","inputZipcode","params","getGrowCal","commonName","zone","console","log","getVirtualGarden","userID","addPlant","newPlant","Swal","fire","title","type","showConfirmButton","showCancelButton","backdrop","headers","Content-Type","editPlant","put","updateWatering","userName","plantId","wateredData","PlantHeader","state","item","_this2","this","location","then","res","setItem","data","catch","err","setState","l","m","s","header","photoURL","variety","React","Component","withRouter","PlantAttributes","attribute","value","PlantDetails","plantAttributes","setPlantAttributes","attributes","Object","keys","values","combined","i","length","combinedKeyAndValue","key","push","map","components_PlantAttributes","PlantCompanions","compatable","undefined","dataYesCompatable","join","GrowingCalendar","flowers","events","hardinessZone","toUpperCase","searchedZone","loadGrowCal","setGrowCal","growData","calendarAttrs","indoorStart","indoorEnd","directStart","directEnd","transplantStart","transplantEnd","forEach","currentSowType","sowType","toLowerCase","moment","dtRangeStart","format","dtRangeEnd","$","fullCalendar","defaultView","slotDuration","months","height","visibleRange","start","end","resourceAreaWidth","resourceLabelText","left","center","resources","eventColor","resourceId","allDay","eventRender","event","element","prop","schedulerLicenseKey","PlantCombatives","combative","dataYesCombative","PlantInformation","popout","defaultActiveKey","accordion","icon","components_PlantDetails","components_GrowingCalendar","components_PlantCompanions","components_PlantCombatives","PlantDetailWrapper","Navbar_profile","logout","components_PlantHeader","components_PlantInformation","PlantDetail","toggle","components_PlantDetailWrapper","Login","htmlFor","onChange","handleLogin","href","forgotPassword","SignUp","zipCode","handleSignup","NavBar","preventDefault","redirectTo","Redirect","pathname","loggedIn","components_Login","components_SignUp","contextTypes","router","PropTypes","object","isRequired","Wrapper","children","Jumbotron","components_Wrapper","BodyWrapper","Greeting","lineOne","lineTwo","Intro","BodyContent","components_Intro","FooterDiv","copyrights","moreLinks","links","SearchBar","handleInputChange","PlantCard","photo","actions","concat","zones","NewComerIns","results","toPopulate","_event$target","target","_this","defineProperty","_this$state","matchingPlants","selectRandomThree","toPopulateArr","rand1","Math","floor","random","rand2","rand3","bottomSheet","components_SearchBar","label","defaultValue","PlantCards","_id","plantDetails","plantAttrURL","plantCategories","Landing","components_Jumbotron","Navbar","components_Greeting","components_NewComerIns","components_BodyWrapper","components_BodyContent","Footer","ProfileHeader","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","gardenSize","src","alt","ProfileSelector","activeComponent","active","AboutMe","ContactInfo","NotificationIcon","Notification","components_NotificationIcon","click","NotificationsList","changeNotificationStatus","bordered","components_Notification","UpdateLogin","placeholder","EditModal","plantName","lastWatered","wateringFrequency","handleChange","handleSubmit","require","warningStyle","color","infoStyle","VirtualPlant","isWateringOverdue","daysOverdue","PlantInfo","handleWateringDone","warningMsg","VirtualPlantEditModal","nextWatering","add","_this$props","wateringCallback","_this$props2","plantImage","reveal","VirtualPlantAddModal","plantNames","addNewPlant","virtualGardenCallback","handleAdd","newPlantForm","FormData","document","getElementById","files","append","dateComponents","split","slice","temp","lastWateredFormatted","local","parseInt","timer","customClass","convertFunc","plantNamesArr","plant","lowerCaseName","plantNamesObj","_i","_this3","VirtualGarden","my_plants","getGarden","sortPlants","plantAdded","currentPlants","plantList","today","lastWateredDate","daysSinceLastWatered","diff","sort","plant1","plant2","wateringDone","my_plants_updated","index","findIndex","watered","components_VirtualPlant_VirtualPlant","toString","components_VirtualPlantAddModal","ProfileContent","myProps","Switch","Route","exact","path","render","components_AboutMe","assign","components_ContactInfo","NotificationList","components_UpdateLogin","components_VirtualGarden_VirtualGarden","ProfileBody","elems","querySelectorAll","el","classList","remove","components_ProfileSelector","components_ProfileContent","Profile","components_ProfileHeader","components_ProfileBody","TeamProfileCard","intro","rel","personalWebLink","github","TeamProfile","Teammates","teammate","components_TeamProfileCard","FlowerDepartment","activeCards","activePage","pageItem","loading","input","loadFlowers","setFlower","setPageItem","pushUpItems","pageNum","itemNum","ceil","tempArray","window","scrollTo","inputPlant","handleOnChange","items","maxButtons","onSelect","filter","includes","Flowers","components_FlowerDepartment","FruitsDepartment","fruits","loadFruits","setFruit","Fruits","components_FruitsDepartment","VegeDepartment","veges","loadVegetables","setVegetables","Vegetables","VegetablesDepartment","HerbsDepartment","herbs","loadHerbs","setHerbs","Herbs","components_HerbsDepartment","App","bind","assertThisInitialized","response","text","status","response2","_this4","_this5","BrowserRouter","landing","_ref","component","rest","objectWithoutProperties","pages_teamProfile","PlantDetail_PlantDetail","vegetables","Boolean","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2f71f33c.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"./style.css\";\nimport { SideNav, SideNavItem} from \"react-materialize\";\n\n// By extending the React.Component class, Counter inherits functionality from it\nfunction SideNavBar(props) {\n\n    let sideNavFirstName = props.firstName\n    let sideNavLastName = props.lastName\n    let sideNavProfilePic = props.profilepic\n    let sideNavCoverPhoto = props.coverphoto\n    let sideNavEmail = props.username\n\n    // The render method returns the JSX that should be rendered\n    return (\n        //use bootstrap to create a navbar\n        <SideNav\n        className=\"side-nav yellow lighten-5\"\n        trigger={<span className=\"user-account-button\"><i className=\"fas fa-bars\"></i></span>}\n        options={{ closeOnClick: true, edge: 'left' }}\n        >\n            <SideNavItem userView\n                user={{\n                    background: sideNavCoverPhoto,\n                    image: sideNavProfilePic,\n                    name: sideNavFirstName + \" \" + sideNavLastName,\n                    email: sideNavEmail\n                }}\n            />\n            <SideNavItem waves className=\"side-nav-link\"><Link to=\"/profile\"><i className=\"fas fa-user\"></i>Profile</Link></SideNavItem>\n            <SideNavItem divider />\n            <SideNavItem waves className=\"side-nav-link\"><Link className=\"side-nav-link\" to=\"/profile/virtualgarden\"><i className=\"fas fa-leaf\"></i>Virtual Garden</Link></SideNavItem>\n            <SideNavItem waves className=\"side-nav-link\"><Link className=\"side-nav-link\" to=\"/profile/gallery\"><i className=\"fas fa-images\"></i>Gallery</Link></SideNavItem>\n            <SideNavItem waves className=\"side-nav-link\"><Link className=\"side-nav-link\" to=\"/profile/notifications\"><i className=\"fas fa-bell\"></i>Notifications</Link></SideNavItem>\n            <SideNavItem waves className=\"side-nav-link\" onClick={props.handleLogout}><i class=\"fas fa-sign-out-alt\"></i>Logout</SideNavItem>\n        </SideNav>\n    );\n};\n\nexport default SideNavBar;\n\n\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport \"./style.css\";\nimport { Navbar, NavItem, Dropdown, Button } from \"react-materialize\";\nimport SideNavBar from \"../SideNav\";\n\n\n// By extending the React.Component class, Counter inherits functionality from it\nfunction NavbarProfile(props) {\n\n    // The render method returns the JSX that should be rendered\n    return (\n        <wrapper className=\"prof-nav-wrapper\">\n            {/* //use bootstrap to create a navbar */}\n            <div className=\"prof-nav-margin\">\n                <Navbar className=\"top-nav brand-logo blue-grey darken-2\" brand={<Link to=\"/landing\" className=\"brand-logo\">GardenBuddy</Link>} right>\n                    <NavItem>\n                        <Dropdown \n                            options={{hover: true}}\n                            trigger={<Button className=\"transparent\">Departments</Button>}>\n                                <Link to=\"/flowers\"><NavItem>Flowers</NavItem></Link>\n                                <NavItem divider />\n                                <Link to=\"/fruits\"><NavItem>Fruits</NavItem></Link>\n                                <NavItem divider />\n                                <Link to=\"/vegetables\"><NavItem>Vegetables</NavItem></Link>\n                                <NavItem divider />\n                                <Link to=\"/herbs\"><NavItem>Herbs</NavItem></Link>\n                        </Dropdown>\n                    </NavItem>                    \n                    <NavItem className=\"amber darken-1\" style={ {fontWeight: \"bold\"} }><Link to=\"/teamprofile\">Our Team</Link></NavItem>\n                    {/* <NavItem className=\"amber\"><Login /></NavItem>\n                    <NavItem><SignUp /></NavItem> */}\n                    <NavItem>\n                        <SideNavBar \n                            username={props.user.username}\n                            password={props.user.password}\n                            phone={props.user.phone}\n                            firstName={props.user.firstName}\n                            lastName={props.user.lastName}\n                            zipcode={props.user.zipcode}\n                            city={props.user.city}\n                            st={props.user.st}\n                            aboutme={props.user.aboutme}\n                            profilepic={props.user.profilepic}\n                            coverphoto={props.user.coverphoto}\n                            handleLogout={props.handleLogout}\n                        />\n                    </NavItem>\n                </Navbar>\n            </div>\n        </wrapper>\n    );\n};\n\nexport default NavbarProfile;\n\n\n","import axios from \"axios\";\nimport Swal from 'sweetalert2';\n\nexport default {\n  // Gets all plants\n  getPlants: function() {\n    return axios.get(\"/api/plants\");\n  },\n  // Gets the plant with the given id\n  getAPlant: function(id) {\n    // console.log(\"The id passed in is \" + id);\n    return axios.get(\"/api/plants/\" + id);\n  },\n  // Gets the plants with the given category\n  getCategory: function(category) {\n    return axios.get(\"/api/plants/category/\" + category);\n  },\n  // Deletes the plant with the given id\n  deletePlant: function(id) {\n    return axios.delete(\"/api/plants/\" + id);\n  },\n  // Saves a plant to the database\n  savePlant: function(plantData) {\n    return axios.post(\"/api/plants\", plantData);\n  },\n\n  // Gets the recommended plants by zip code and category\n  // This corresponds to the basic search by zip code operation.\n  searchPlants: function(inputCategory, inputZipcode){\n    return axios.get(\"/api/plants/search/\", {\n        params : {\n          category: inputCategory,\n          zipcode : inputZipcode\n        }\n      });\n  },\n\n  // Gets the growing calendar for a given plant\n  getGrowCal: function(commonName, zone) {\n    console.log (\"API here!\" + commonName);\n    console.log (\"API here!\" + zone);\n//    return axios.get(\"/api/plants/getgrowingcalendar/\");\n    return axios.get(\"/api/plants/getgrowingcalendar\", {\n      params: {\n        commonName: commonName,\n        zone: zone\n      }\n    });\n  },\n\n  //\n  // User Profile specific API routes \n  //\n\n  // User's Virtual Garden\n  getVirtualGarden : function(userID) {\n    return axios.get(\"/api/profile/virtualgarden/\" + userID)\n  },\n\n  // Add plant to virtual garden\n  addPlant : function(userID, newPlant) {\n    console.log(\"here is the plant info\", newPlant);\n    Swal.fire({\n      title: 'Adding to garden, please wait',\n      type: 'info',\n      showConfirmButton: false,\n      showCancelButton: false,\n      backdrop: true,\n    })\n    return axios.post(\"/api/profile/virtualgarden/\" + userID, newPlant,\n      {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }\n    );\n  },\n\n  editPlant: function(id, plantData) {\n    console.log(\"plant id is \", id);\n    console.log(\"plant data is \", plantData);\n    return axios.put(\"/api/profile/virtualgarden/vitualplant/\" + id, plantData);\n  },\n\n  updateWatering: function(userName, plantId, wateredData) {\n    console.log(\"API received id: \", plantId);\n    console.log(\"API received data: \", wateredData);\n    return axios.put(\"/api/profile/virtualgarden/user/\" + userName + \"/watering/\" + plantId, wateredData);\n  }\n\n};\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport \"./style.css\";\nimport { Card, CardTitle, Col, Collection, CollectionItem } from \"react-materialize\";\nimport API from \"../../utils/API\";\n\nclass PlantHeader extends React.Component {\n    \n    state = {\n        item: []\n    };\n\n    componentDidMount() {\n        console.log(this.props.location.state.id);\n        let id = this.props.location.state.id;\n        API.getAPlant(id)\n            .then((res) => this.setItem(res.data))\n            .catch((err) => console.log(err))\n    }\n\n    setItem(data) {\n        this.setState({ item: data });\n    }\n\n    render() {\n        return (\n            <Col l={3} m={4} s={12} className=\"offset-s1 offset-m1 offset-l1\">\n                <Card className='plant-head'\n                    header={<CardTitle image={this.state.item.photoURL}>{this.state.item.commonName}</CardTitle>}>\n                    {/* I think the info below is redundant */}\n                    <Collection className=\"basic-plant-details\">\n                        <CollectionItem>Common Name: {this.state.item.commonName}</CollectionItem>\n                        <CollectionItem>Variety: {this.state.item.variety}</CollectionItem>\n                        <CollectionItem>Zone: {this.state.item.zone}</CollectionItem>\n                    </Collection>\n                </Card>\n            </Col>\n        )\n    }\n}\n\nexport default withRouter(PlantHeader);\n\n","import React from \"react\";\n\nfunction PlantAttributes(props) {\n    return(\n        <p><b>{props.attribute}:</b> {props.value}</p>\n    )\n}\n\nexport default PlantAttributes;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport \"./style.css\";\nimport { Collection, CollectionItem } from \"react-materialize\";\nimport API from \"../../utils/API\";\nimport PlantAttributes from \"../PlantAttributes\";\n\nclass PlantDetails extends React.Component{\n    state = {\n        item: [],\n        plantAttributes: []\n    };\n\n    componentDidMount() {\n        let id = this.props.location.state.id;\n        API.getAPlant(id)\n            .then((res) => this.setItem(res.data))\n            .catch((err) => console.log(err));\n    }\n\n    setItem(data) {\n        this.setState({item: data});\n        this.setPlantAttributes();\n    }\n\n    setPlantAttributes() {\n        let attributes = Object.keys(this.state.item.plantAttributes);\n        let values = Object.values(this.state.item.plantAttributes);\n\n        let combined = [];\n        for(var i = 0; i < attributes.length; i++) {\n            let combinedKeyAndValue = {\n                key: attributes[i],\n                value: values[i]\n            }\n            combined.push(combinedKeyAndValue);\n        }\n\n        this.setState({plantAttributes: combined});\n    }\n\n    render() {\n        return (\n            <Collection className=\"plant-option\">\n                <CollectionItem>\n                    {this.state.plantAttributes.map((attribute) => (\n                        <PlantAttributes \n                            attribute={attribute.key}\n                            value={attribute.value}\n                        />\n                    ))}\n                </CollectionItem>\n            </Collection>\n        )\n    }\n}\n\nexport default withRouter(PlantDetails);","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport API from \".././../utils/API\";\n\nclass PlantCompanions extends React.Component {\n    \n    state = {\n        item: [],\n    };\n\n    componentDidMount() {\n        let id = this.props.location.state.id;\n        API.getAPlant(id)\n            .then((res) => this.setItem(res.data))\n            .catch((err) => console.log(err));\n    }\n\n    setItem(data) {\n        if(data.compatable[0] === \"\" || data.compatable[0] === undefined) {\n            let data = \" I have no friends...¯\\\\_༼ ಥ ‿ ಥ ༽_/¯\";\n            this.setState({item: data});\n        }\n        else{\n            let dataYesCompatable = data.compatable.join(\", \");\n            this.setState({item: dataYesCompatable});\n        }\n    }\n\n    render() {    \n        return (\n            <h6>{this.state.item}</h6>\n        );\n    }\n}\n\nexport default withRouter(PlantCompanions);\n\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport moment from \"moment\";\nimport $ from 'jquery';\nimport 'fullcalendar';\nimport 'fullcalendar-scheduler';\nimport \"./style.css\";\nimport API from \"../../utils/API\";\n\nclass GrowingCalendar extends React.Component{\n  state = {\n    flowers: [],\n    events: []\n  }\n\n  //variables common name and hardiness zone\n\n  componentDidMount() {\n    let hardinessZone = \"10a\"; //10a by default\n    \n    let commonName1 = this.props.location.state.commonName;\n    let commonName = commonName1.toUpperCase();\n    //console.log(commonName);\n    \n    let searchedZone = this.props.location.state.searchedZone;\n    if(searchedZone) {\n      hardinessZone = searchedZone;\n    }\n    this.loadGrowCal(commonName,hardinessZone);\n  }\n\n  loadGrowCal(commonName, zone) {\n    console.log (\"The Common Name is:\" + commonName)\n    console.log (\"The Zone is:\" + zone)\n    API.getGrowCal(commonName, zone)\n        .then(res => {\n            console.log(\"GROW!!!\")\n            //console.log(res.data);\n            console.log(res.data);\n            //call new function to reformat data\n            this.setGrowCal(res.data);\n            //call function here to translate the response            \n        })\n        .catch(err => console.log(err));\n  }  \n\n  //New Function to reformat data\n  reformat(data) {\n    //this.setgrowcal(returned data)\n  }\n\n  setGrowCal(data) {\n    // We're not really using state for the calendar attributes\n    // this.setState({growCal: data});\n\n    // $(\"#calendar\").fullCalendar('rerenderEvents');\n\n    let growData = data;\n    let commonName = this.props.location.state.commonName.toUpperCase();\n    let calendarAttrs = {\n      indoorStart : \"\",\n      indoorEnd : \"\",\n      directStart : \"\",\n      directEnd : \"\",\n      transplantStart : \"\",\n      transplantEnd : \"\"\n    };\n\n    // Step 1: Check how many growCal entries we got\n    console.log(commonName + \"has \" + growData.length + \" growing calendar entries\");\n\n    // Extract the start and end dates for each type of growing calendar\n    growData.forEach( (item) => {\n      let currentSowType = item.sowType.toLowerCase();\n      console.log(\"Found \" + currentSowType + \" calendar for \" + commonName);\n      switch(currentSowType) {\n        case \"indoor sow\" :\n          calendarAttrs.indoorStart = moment(item.dtRangeStart).format(\"YYYY-MM-DD\");\n          calendarAttrs.indoorEnd = moment(item.dtRangeEnd).format(\"YYYY-MM-DD\");\n          break;\n        case \"direct sow\" :\n          calendarAttrs.directStart = moment(item.dtRangeStart).format(\"YYYY-MM-DD\");\n          calendarAttrs.directEnd = moment(item.dtRangeEnd).format(\"YYYY-MM-DD\");\n          break;\n        case \"transplant\" :\n          calendarAttrs.transplantStart = moment(item.dtRangeStart).format(\"YYYY-MM-DD\");\n          calendarAttrs.transplantEnd = moment(item.dtRangeEnd).format(\"YYYY-MM-DD\");\n          break;\n        default:\n          console.log(\"Unexpected sow type - \" + currentSowType);\n      }\n    })\n\n\n\n      $('#calendar').fullCalendar({\n        defaultView: 'timelineYear',\n        slotDuration: { months: 1 },\n        height: 205,\n        visibleRange: {\n          start: moment('2018-01-01'),\n          end: moment('2019-01-01')\n        },\n        resourceAreaWidth: '20%',\n        resourceLabelText: 'How to Sow',\n        header: {\n          'left': '',\n          'center': '',\n          'right': ''\n        },\n        resources: [\n          { id: 'Indoor Sow', title: 'Indoor Sow' }, //sowType = \"Indoor Sow\"\n          { id: 'Direct Sow', title: 'Direct Sow', eventColor: 'brown' }, //sowType = \"Outdoor Sow\"\n          { id: 'Transplant', title: 'Transplant', eventColor: 'Green' }  //sowType = \"Transplant\"\n        ],\n        events: [\n        //   {\n        //     \"zone\" : \"9-10\", \n        //     \"zones\" : \"[9a, 9b, 10a, 10b]\", \n        //     \"sowType\" : \"Transplant\", \n        //     \"dtRangeStart\" : \"2019-02-15\", \n        //     \"dtRangeEnd\" : \"2019-03-28\"\n        // }, \n\n        //   {\n        //     \"zone\" : \"9-10\", \n        //     \"zones\" : \"[9a, 9b, 10a, 10b]\", \n        //     \"sowType\" : \"Indoor Sow\", \n        //     \"dtRangeStart\" : \"2019-01-04\", \n        //     \"dtRangeEnd\" : \"2019-01-18\"\n        // }, \n\n      //   {\n      //     \"zone\" : \"9-10\", \n      //     \"zones\" : \"[9a, 9b, 10a, 10b]\", \n      //     \"sowType\" : \"Direct Sow\", \n      //     \"dtRangeStart\" : \"2019-03-01\", \n      //     \"dtRangeEnd\" : \"2019-04-25\"\n      // }        \n          {\n            id: \"1\",  //PlantID\n            resourceId: \"Transplant\",  //sowType\n            start: calendarAttrs.transplantStart,\n            end: calendarAttrs.transplantEnd,\n            title: (moment(calendarAttrs.transplantStart).format(\"MM-DD\")\n                    + \" to \" +\n                    moment(calendarAttrs.transplantEnd).format(\"MM-DD\")),\n            allDay: true\n          },\n          {\n            id: \"2\",\n            resourceId: \"Indoor Sow\",\n            start: calendarAttrs.indoorStart,\n            end: calendarAttrs.indoorEnd,\n            title: (moment(calendarAttrs.indoorStart).format(\"MM-DD\")\n                    + \" to \" +\n                    moment(calendarAttrs.indoorEnd).format(\"MM-DD\")),\n            allDay: true\n          },\n          {\n            id: \"3\",\n            resourceId: \"Direct Sow\",\n            start: calendarAttrs.directStart,\n            end: calendarAttrs.directEnd,\n            title: (moment(calendarAttrs.directStart).format(\"MM-DD\")\n                    + \" to \" +\n                    moment(calendarAttrs.directEnd).format(\"MM-DD\")),\n            allDay: true\n          },\n          {\n            id: \"4\",\n            resourceId: \"c\",\n            start: \"2018-04-07T07:30:00\",\n            end: \"2018-04-07T09:30:00\",\n            title: \"event 4\"\n          },\n          {\n            id: \"5\",\n            resourceId: \"d\",\n            start: \"2018-04-07T10:00:00\",\n            end: \"2018-04-07T15:00:00\",\n            title: \"event 5\"\n          }\n        ],\n        eventRender: function(event, element) {\n          element.prop(\"title\", event.title);  //hover to reveal entire date range\n        },\n        schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source'\n      });\n    };\n\n\n  render() {\n    return (\n      <div id=\"calendar\"></div>\n\n    )\n  }\n}\n\nexport default withRouter(GrowingCalendar);","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport API from \"../../utils/API\";\n\nclass PlantCombatives extends React.Component {\n    \n    state = {\n        item: [],\n    };\n\n    componentDidMount() {\n        let id = this.props.location.state.id;\n        API.getAPlant(id)\n            .then((res) => this.setItem(res.data))\n            .catch((err) => console.log(err));\n    }\n\n    setItem(data) {\n        if(data.combative[0] === \"\" || data.combative[0] === undefined) {\n            let data = \"I don't compte I just grow...(ง •̀_•́)ง \"\n            this.setState({item: data});\n        }\n        else{\n            let dataYesCombative = data.combative.join(\", \");\n            this.setState({item: dataYesCombative});\n        }\n    }\n\n    render() {    \n        return (\n            <h6>{this.state.item}</h6>\n        );\n    }\n}\n\nexport default withRouter(PlantCombatives);\n\n","import React from 'react'\nimport \"./style.css\";\nimport $ from 'jquery';\nimport { Col, Collapsible, CollapsibleItem } from \"react-materialize\";\nimport PlantDetails from \"../PlantDetails\";\nimport PlantCompanions from \"../PlantCompanions\";\nimport GrowingCalendar from \"../GrowingCalendar\";\nimport PlantCombatives from \"../PlantCombatives\";\nimport 'fullcalendar';\nimport 'fullcalendar-scheduler';\nimport \"fullcalendar-reactwrapper\";\n\nfunction PlantInformation(props) {\n    return (\n            <Col l={7} m={8} s={12}>\n                <Collapsible popout defaultActiveKey={0} accordion=\"false\">\n                    <CollapsibleItem className=\"plant-detail-option\" header='Plant Attributes' icon={<i class=\"fas fa-info-circle\"></i>}>\n                        <PlantDetails />\n                    </CollapsibleItem>\n                    <CollapsibleItem className=\"plant-detail-option\" onClick={() => {$('#calendar').fullCalendar('render');}} header='Growing Calendar' icon={<i class=\"far fa-calendar-alt\"></i>}>\n                        <GrowingCalendar />\n                    </CollapsibleItem>\n                    <CollapsibleItem className=\"plant-detail-option\" header='Companion Plants' icon={<i class=\"fab fa-pagelines\"></i>}>\n                        <PlantCompanions />\n                    </CollapsibleItem>\n                    <CollapsibleItem className=\"plant-detail-option\" header='Combative Plants' icon={<i class=\"fas fa-skull-crossbones\"></i>}>\n                        <PlantCombatives />\n                    </CollapsibleItem>\n                </Collapsible>\n            </Col>\n    )\n}\n\nexport default PlantInformation;\n\n","import React from 'react';\nimport NavbarProfile from \"../Navbar-profile\";\nimport \"./style.css\";\nimport { Row } from \"react-materialize\";\nimport PlantHeader from \"../PlantHeader\";\nimport PlantInformation from \"../PlantInformation\";\n\nfunction PlantDetailWrapper(props) {\n    return (\n        <div className=\"plant-detail-body\">\n            <NavbarProfile user={props.user} logout={props.logout}/>\n            <Row className=\"plant-detail-body-row\">\n                <PlantHeader />\n                <PlantInformation/>\n            </Row>\n        </div>\n    )\n}\n\nexport default PlantDetailWrapper\n\n","import React, { Component } from 'react';\nimport PlantDetailWrapper from \"../components/PlantDetailWrapper\";\nimport axios from \"axios\";\nimport $ from \"jquery\";\n\nexport default class PlantDetail extends Component {\n\n    componentDidMount() {\n        $(\".modal-overlay\").toggle(\"modal-close\");\n    }\n\n    render() {\n        return (\n            <div>\n                <PlantDetailWrapper user={this.props.user} handleLogout={this.props.handleLogout}/>\n            </div>\n        )\n    }\n}\n","import React from \"react\";\n// import \"./style.css\";\nimport { Modal, Button } from \"react-materialize\";\n\n// By extending the React.Component class, Counter inherits functionality from it\nfunction Login(props) {\n\n    // The render method returns the JSX that should be rendered\n    return (\n        <form>\n            <Modal\n                id=\"login-modal\"\n                header='Login To Garden Buddy'\n                trigger={<span style={{ fontWeight: \"bold\" }}>Login</span>}\n                className=\"yellow lighten-5\"\n            >\n            <p>{props.username}</p>\n                <div className=\"input-field\">\n                    <label htmlFor=\"login-email\">Email</label>\n                    <input id=\"login-email\" value={props.user.username} onChange={props.onChange} name=\"username\" type=\"email\"></input>\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"login-password\">Password</label>\n                    <input id=\"login-password\" value={props.user.password} onChange={props.onChange} name=\"password\" type=\"password\"></input>\n                </div>\n                <Button className=\"auth-button\" onClick={props.handleLogin}>Login</Button><br /><br />\n                <a href=\"#\" onClick={props.forgotPassword}>Forgot Your Email or Password?</a>\n            </Modal>\n        </form>\n    );\n};\n\nexport default Login;\n","import React from \"react\";\nimport \"./style.css\";\nimport { Modal, Button, Col, Row } from \"react-materialize\";\n\n// By extending the React.Component class, Counter inherits functionality from it\nfunction SignUp(props) {\n\n    // The render method returns the JSX that should be rendered\n    return (\n        <Modal\n            header='Sign Up for Garden Buddy'\n            trigger={<span>Register</span>}\n            className=\"yellow lighten-5 container\">\n            <Row className=\"input-area\">\n                <Col s={12}>\n                    <p>Please fill out your info below:</p>\n                </Col>\n            </Row>\n            <form>\n\n                <Row className=\"input-area\">\n                    <div className=\"input-field col s6\">\n                        <label htmlFor=\"first-name-signup\">First Name</label>\n                        <input\n                            id=\"first-name-signup\"\n                            type=\"text\"\n                            name=\"firstName\"\n                            onChange={props.onChange}\n                            value={props.firstName}>\n                        </input>\n                    </div>\n                    <div className=\"input-field col s6\">\n                        <label htmlFor=\"last-name-signup\">Last Name</label>\n                        <input\n                            id=\"last-name-signup\"\n                            type=\"text\"\n                            name=\"lastName\"\n                            onChange={props.onChange}\n                            value={props.lastName}>\n                        </input>\n                    </div>\n                </Row>\n                <Row className=\"input-area\">\n                    <div className=\"input-field col s12\">\n                        <label htmlFor=\"phone-signup\">Phone</label>\n                        <input\n                            id=\"phone-signup\"\n                            type=\"text\"\n                            name=\"phone\"\n                            onChange={props.onChange}\n                            value={props.phone}>\n                        </input>\n                    </div>\n                </Row>\n                <Row className=\"input-area\">\n                    <div className=\"input-field col s12\">\n                        <label htmlFor=\"email-signup\">Email</label>\n                        <input\n                            id=\"email-signup\"\n                            type=\"email\"\n                            name=\"username\"\n                            onChange={props.onChange}\n                            value={props.username}>\n                        </input>\n                    </div>\n                </Row>\n                <Row className=\"input-area\">\n                    <div className=\"input-field col s12\">\n                        <label htmlFor=\"zip-code-signup\">Zip Code</label>\n                        <input\n                            id=\"zip-code-signup\"\n                            type=\"text\"\n                            name=\"zipcode\"\n                            onChange={props.onChange}\n                            value={props.zipCode}>\n                        </input>\n                    </div>\n                </Row>\n                <Row className=\"input-area\">\n                    <Col className=\"input-field\" s={6}>\n                        <label htmlFor=\"city-signup\">City</label>\n                        <input\n                            id=\"city-signup\"\n                            type=\"text\"\n                            name=\"city\"\n                            onChange={props.onChange}\n                            value={props.city}>\n                        </input>\n                    </Col>\n\n                    <Col className=\"input-field\" s={6}>\n                        <label htmlFor=\"state-signup\">State</label>\n                        <input\n                            id=\"state-signup\"\n                            type=\"text\"\n                            name=\"st\"\n                            onChange={props.onChange}\n                            value={props.st}>\n                        </input>\n                    </Col>\n                </Row>\n                <Row className=\"input-area\">\n                    <Col s={2} >\n                        <i className=\"signup-form-icon fas fa-user-circle\"></i>\n                    </Col>\n                    <Col className=\"input-field\" s={10}>\n                        <label htmlFor=\"profile-pic-signup\">Profile Picture (URL)</label>\n                        <input\n                            id=\"profile-pic-signup\"\n                            type=\"text\"\n                            name=\"profilepic\"\n                            onChange={props.onChange}\n                            value={props.profilepic}\n                        >\n                        </input>\n                    </Col>\n                </Row>\n                <Row className=\"input-area\">\n                    <Col s={2}>\n                        <i className=\"signup-form-icon fas fa-image\"></i>\n                    </Col>\n                    <Col className=\"input-field\" s={10}>\n                        <label htmlFor=\"cover-pic-signup\">Cover Photo (URL)</label>\n                        <input\n                            id=\"cover-pic-signup\"\n                            type=\"text\"\n                            name=\"coverphoto\"\n                            onChange={props.onChange}\n                            value={props.coverphoto}\n                        >\n                        </input>\n                    </Col>\n                </Row>\n                <Row className=\"input-area\">\n                    <div className=\"input-field col s12\">\n                        <label htmlFor=\"about-me-signup\">About Me</label>\n                        <textarea\n                            className=\"materialize-textarea\"\n                            id=\"about-me-signup\" type=\"text-area\"\n                            name=\"aboutme\"\n                            onChange={props.onChange}\n                            value={props.aboutme}>\n                        </textarea>\n                    </div>\n                </Row>\n                <Row className=\"input-area\">\n                    <div className=\"input-field col s12\">\n                        <label htmlFor=\"password-signup\">Password</label>\n                        <input\n                            id=\"password-signup\"\n                            type=\"password\"\n                            name=\"password\"\n                            onChange={props.onChange}\n                            value={props.password}>\n                        </input>\n                    </div>\n                </Row>\n                <Button className=\"auth-button\" onClick={props.handleSignup} type=\"submit\">Sign Up</Button>\n            </form>\n        </Modal>\n    );\n};\n\nexport default SignUp;\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport \"./style.css\";\nimport PropTypes from 'prop-types';\nimport { Navbar, NavItem, Dropdown, Button } from \"react-materialize\";\nimport SideNavBar from \"../SideNav\";\nimport Login from \"../Login\";\nimport SignUp from \"../SignUp\";\nimport axios from \"axios\";\n// import Swal from 'sweetalert2'\n\n\n// By extending the React.Component class, Counter inherits functionality from it\nclass NavBar extends Component {\n\n    // logout = (event) => {\n    //     event.preventDefault();\n    //     axios.get(\"/auth/logout\", (req, res) => {\n    //         console.log(req);\n    //         console.log(res);\n    //     })\n    // }\n\n    forgotPassword = (event) => {\n        event.preventDefault();\n        //TODO:\n        //code here for the request to reset the password\n        console.log(\"forgot password\");\n    }\n\n    render() {\n\n        if (this.props.user.redirectTo) {\n\t\t\treturn <Redirect to={{ pathname: this.props.user.redirectTo }} />\n\t\t} else if (this.props.user.loggedIn) {\n            return (\n\n                <wrapper className=\"nav-wrapper\">\n                    {/* //use bootstrap to create a navbar */}\n                    <div className=\"nav-margin\">\n                        <Navbar className=\"top-nav brand-logo transparent\" brand={<Link to=\"/\" className=\"brand-logo\">GardenBuddy</Link>} right>\n                            {/* <NavItem onClick={() => console.log('test click')}>Getting started</NavItem> */}\n                            {/* <NavItem>Account</NavItem> */}\n    \n                            <NavItem>\n                                <Dropdown \n                                    className=\"nav-dropdown-menu\"\n                                    trigger={<Button className=\"transparent\">Departments</Button>}  options={{hover: true}}>\n                                        <Link to=\"/flowers\"><NavItem>Flowers</NavItem></Link>\n                                        <NavItem divider />\n                                        <Link to=\"/fruits\"><NavItem>Fruits</NavItem></Link>\n                                        <NavItem divider />\n                                        <Link to=\"/vegetables\"><NavItem>Vegetables</NavItem></Link>\n                                        <NavItem divider />\n                                        <Link to=\"/herbs\"><NavItem>Herbs</NavItem></Link>\n                                </Dropdown>\n                            </NavItem>\n    \n                            <NavItem className=\"blue-grey darken-3\" style={{ fontWeight: \"bold\" }}><Link to=\"/teamprofile\">Our Team</Link></NavItem>\n                            <NavItem><SideNavBar username={this.props.user.username}\n                                    password={this.props.user.password}\n                                    phone={this.props.user.phone}\n                                    firstName={this.props.user.firstName}\n                                    lastName={this.props.user.lastName}\n                                    zipcode={this.props.user.zipcode}\n                                    city={this.props.user.city}\n                                    st={this.props.user.st}\n                                    aboutme={this.props.user.aboutme}\n                                    profilepic={this.props.user.profilepic}\n                                    coverphoto={this.props.user.coverphoto}\n                                    onChange={this.props.onChange}\n                                    handleLogout={this.props.handleLogout}/></NavItem>\n                        </Navbar>\n                    </div>\n                </wrapper>\n            );\n        } else {\n\n        // The render method returns the JSX that should be rendered\n        return (\n\n            <wrapper className=\"nav-wrapper\">\n                {/* //use bootstrap to create a navbar */}\n                <div className=\"nav-margin\">\n                    <Navbar className=\"top-nav brand-logo transparent\" brand={<Link to=\"/\" className=\"brand-logo\">GardenBuddy</Link>} right>\n\n                        <NavItem>\n                            <Dropdown \n                                className=\"nav-dropdown-menu\"\n                                trigger={<Button className=\"transparent\">Departments</Button>}  options={{hover: true}}>\n                                    <Link to=\"/flowers\"><NavItem>Flowers</NavItem></Link>\n                                    <NavItem divider />\n                                    <Link to=\"/fruits\"><NavItem>Fruits</NavItem></Link>\n                                    <NavItem divider />\n                                    <Link to=\"/vegetables\"><NavItem>Vegetables</NavItem></Link>\n                                    <NavItem divider />\n                                    <Link to=\"/herbs\"><NavItem>Herbs</NavItem></Link>\n                            </Dropdown>\n                        </NavItem>\n\n                        <NavItem className=\"blue-grey darken-3\" style={{ fontWeight: \"bold\" }}><Link to=\"/teamprofile\">Our Team</Link></NavItem>\n                        <NavItem className=\"amber\">\n                            <Login \n                                user={this.props.user}\n                                onChange={this.props.onChange}\n                                handleLogin={this.props.handleLogin}\n                                forgotPassword={this.forgotPassword}\n                            />\n                        </NavItem>\n                        <NavItem className=\"blue-grey darken-4\">\n                            <SignUp\n                                username={this.props.user.username}\n                                password={this.props.user.password}\n                                phone={this.props.user.phone}\n                                firstName={this.props.user.firstName}\n                                lastName={this.props.user.lastName}\n                                zipcode={this.props.user.zipcode}\n                                city={this.props.user.city}\n                                st={this.props.user.st}\n                                profilepic={this.props.user.profilepic}\n                                coverphoto={this.props.user.coverphoto}\n                                onChange={this.props.onChange}\n                                handleSignup={this.props.handleSignup}\n                            />\n                        </NavItem>\n                    </Navbar>\n                </div>\n            </wrapper>\n        );\n    }\n    };\n};\n\nNavBar.contextTypes = {\n    router: PropTypes.object.isRequired\n};\n\nexport default NavBar;\n\n\n\n\n\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n    return(\n      <div className=\"wrapper\">{props.children}</div>\n    );\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\nimport Wrapper from \"../Wrapper\";\n\nfunction Jumbotron(props) {\n    return (\n        <Wrapper className=\"wrapper\">\n            <div className=\"bg-image\">\n                {props.children}\n            </div>\n        </Wrapper>\n    );\n}\n        \nexport default Jumbotron;","import React from \"react\";\nimport \"./style.css\";\n\nfunction BodyWrapper(props) {\n    return(\n        <div className=\"bodyWrapper\">{props.children}</div>\n    );\n}\n\nexport default BodyWrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Greeting(props) {\n    return(\n        <div className=\"greeting-text\">\n            <p className=\"greeting\">{props.lineOne}</p>\n            <p className=\"greeting2\">{props.lineTwo}</p>\n        </div>\n    )\n}\n\nexport default Greeting;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Intro(props) {\n    return(\n        <div className=\"introParagraph\">\n            <h3 id=\"intro-title\">Who Are We?</h3>\n            <p id=\"intro-text\">\n                You can't put a plant in the ground and expect it to grow.  It needs water and love and attention. There is great satisfacton when seeds sprout, plants grow, flowers bloom and dinner is havested from the back yard.  GardenBuddy offers our users advise, friendship and encouragement to grow myriad of flowers, vegetables, herbs and fruits regardless of whether they live in the heartland or the desert.  GardenBuddy offers advise and information so you know what will grow in your hardiness zone and the best time to plant.  Plus, we'll send you water reminders so your plants are never thirsty.\n                Happy Harvest!\n            </p>\n        </div>\n    )\n}\n\nexport default Intro;","import React from \"react\";\nimport \"./style.css\";\nimport Intro from \"../Intro\";\n\nfunction BodyContent(props) {\n    return(\n        <div className=\"icon-div\">\n            <Intro />\n        </div>\n    );\n}\n\nexport default BodyContent;","import React from \"react\";\nimport { Footer } from \"react-materialize\";\nimport \"./style.css\";\n\nfunction FooterDiv(props) {\n    return(\n        <Footer copyrights=\"2019 GardenBuddy, All rights reserved\"\n            moreLinks={\n                <a className=\"grey-text text-lighten-4 right\" href=\"#!\">gardenbuddy@gmail.com</a>\n            }\n            links={\n                <ul>\n                {/* <li><a className=\"grey-text text-lighten-3\" href=\"#!\">Our Team</a></li>\n                <li><a className=\"grey-text text-lighten-3\" href=\"#!\">gardenbuddy@gmail.com</a></li> */}\n                </ul>\n            }\n            className='example transparent'\n            >\n                <h5 className=\"white-text\">About GardenBuddy</h5>\n                <p className=\"grey-text text-lighten-4\">Created by our BeLeaf team, strive to decorate your life with more colors and joy!</p>\n        </Footer>\n    )\n}\n\nexport default FooterDiv;","import React from \"react\";\nimport \"./style.css\";\n\n// By extending the React.Component class, Counter inherits functionality from it\nfunction SearchBar(props) {\n\n    // The render method returns the JSX that should be rendered\n    return (\n            <form className=\"searchBar\">\n                <div className=\"input-field\">\n                    <i className=\"material-icons prefix\">search</i>\n                    <input name={props.name} onChange={props.handleInputChange} id=\"icon_prefix\" type=\"text\" className=\"validate\" />\n                    <label htmlFor=\"icon_prefix\">Enter zip code</label>\n                </div>\n            </form>\n    );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport {Card, CardTitle } from \"react-materialize\";\nimport {Link} from \"react-router-dom\";\n\nfunction PlantCard(props) {\n    return(\n        <Card className='medium'\n            header={<CardTitle image={props.photo}>{props.commonName}</CardTitle>}\n            actions={<Link to={{pathname: `/plantdetail/${props.commonName.toLowerCase()}`, state: {id: props.id, commonName: props.commonName, searchedZone: props.searchedZone}}}>Detail</Link>}>\n            Zone: {props.zones}<br/>\n            Variety: {props.variety}<br/>\n            Category: {props.category}\n        </Card>\n    )\n}\n\nexport default PlantCard;","import React from \"react\";\nimport \"./style.css\";\nimport { Button, Modal, Row, Col, Input, ProgressBar } from \"react-materialize\";\nimport SearchBar from \"../SearchBar\";\nimport PlantCards from \"../PlantCards\";\nimport API from \"../../utils/API\";\n\nclass NewComerIns extends React.Component {\n\n    state = {\n        zipcode : '',\n        category : '',\n        searchedZone: '',\n        results : [],\n        toPopulate: []\n    }\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    searchPlants = () => {\n        let {zipcode, category} = this.state;\n        //console.log(\"Searching for \" + category + \" in \" + zipcode);\n\n        API.searchPlants(category, zipcode)\n            .then( (res) => {\n                //console.log(\"Here are the recommended \" + category);\n                //console.log(res.data);\n                this.setState( {results : res.data.matchingPlants , searchedZone : res.data.searchedZone} );\n                this.selectRandomThree();\n            })\n    }\n\n    selectRandomThree() {\n        let toPopulateArr = [];\n        let i = 0;\n        // while(i < 3) {\n        //     let rand = Math.floor(Math.random() * this.state.results.length);\n        //     // console.log(rand);\n        //     toPopulateArr.push(this.state.results[rand]);\n        //     i++;\n        // }\n                // console.log(toPopulateArr);\n        // this.setState({toPopulate: toPopulateArr});\n\n        while(i<1) {\n            let results = this.state.results;\n            let rand1 = Math.floor(Math.random() * results.length);\n            let rand2 = Math.floor(Math.random() * results.length);\n            let rand3 = Math.floor(Math.random() * results.length);\n            if(rand1 !== rand2 && rand2 !== rand3 && rand3 !== rand1) {\n                toPopulateArr.push(results[rand1], results[rand2], results[rand3]);\n                this.setState({toPopulate: toPopulateArr});\n                i++;\n            }    \n        }\n    }\n\n    render(){\n        let searchedZone = this.state.searchedZone;\n        return(\n            <div className=\"instruction\">\n                <Modal\n                    header='Follow the steps to find out suitable plants to grow'\n                    bottomSheet\n                    trigger={<Button waves=\"light\" name=\"category\" className=\"amber darken-1\">Click to start</Button>}\n                    className=\"yellow lighten-5\">\n                        <SearchBar name=\"zipcode\" handleInputChange={this.handleInputChange}/>\n                        <Row>\n                            <Input s={12} name=\"category\" onChange={this.handleInputChange} type='select' label=\"Choose a category\" defaultValue='2'>\n                                <option defaultValue='default'>Select One</option>\n                                <option value='flowers'>Flowers</option>\n                                <option value='vegetables'>Vegetables</option>\n                                <option value='fruits'>Fruits</option>\n                                <option value='herbs'>Herbs</option>\n                            </Input>\n                        </Row>\n                        <Button waves='light' className=\"amber darken-2\" onClick={this.searchPlants}>Search</Button>\n                        {'   '}\n                        <Button waves='light' className=\"amber darken-1\" onClick={() => this.selectRandomThree()}>Next Set</Button>\n\n                        <h5 id=\"result\">Check them out here!</h5>\n                        <Row>\n                        { this.state.toPopulate.map(item => (\n                            <Col s={12} m={10} l={4}>\n                                <PlantCards\n                                    key={item._id}\n                                    id={item._id} \n                                    commonName={item.commonName}\n                                    photo={item.photoURL}\n                                    zones={item.zone}\n                                    plantDetails={item.plantAttrURL}\n                                    variety={item.variety}\n                                    category={item.plantCategories[0]}\n                                    searchedZone={searchedZone}\n                                />\n                            </Col>\n                        ))}\n                        </Row>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default NewComerIns;","import React, { Component } from 'react';\nimport Navbar from \"../components/Navbar\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Wrapper from \"../components/Wrapper\";\nimport BodyWraper from \"../components/BodyWrapper\";\nimport Greeting from \"../components/Greeting\";\nimport BodyContent from \"../components/BodyContent\";\nimport FooterDiv from \"../components/Footer\";\nimport NewComerIns from \"../components/NewComerIns\";\n\n\nclass Landing extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Jumbotron>\n          <Navbar user={this.props.user} onChange={this.props.onChange} handleLogin={this.props.handleLogin} handleSignup={this.props.handleSignup} handleLogout={this.props.handleLogout}/>\n          <Greeting lineOne={`Hello there, ${this.props.user.firstName}`} lineTwo=\"Welcome to GardenBuddy!\"/>\n          <NewComerIns />\n        </Jumbotron>\n        <BodyWraper>\n          <BodyContent />\n        </BodyWraper>\n        <FooterDiv />\n      </Wrapper>\n    );\n  }\n}\n\nexport default Landing;\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport { Card, CardTitle, Row, Col, Chip } from \"react-materialize\";\nimport API from \"../../utils/API\";\n\n// By extending the React.Component class, Counter inherits functionality from it\nclass ProfileHeader extends Component {\n\n    state = {\n        gardenSize: 0\n    }\n\n    constructor(props) {\n        super(props);\n        let userName = this.props.user.username;\n        API.getVirtualGarden(userName).then((res) => {\n\n            // If the user has no virtual plants in their virtual garden yet,\n            // set 'my_plants' to an empty array.\n            // Else, sort the virtual garden so that the plants whose watering\n            // is overdue are displayed first\n            // console.log(\"Got virtual garden length \" + res.data.length)\n            this.setState({gardenSize: res.data.length})\n\n        });\n    }\n\n    render() {\n\n        // The render method returns the JSX that should be rendered\n        return (\n            <wrapper className=\"container\">\n                <Row className=\"profile-header\">\n                    <Col s={10} m={10} l={10} className=\" offset-s1 offset-l1 offset-m1\">\n                        <Card className='medium'\n                            header={<CardTitle image={this.props.user.coverphoto}></CardTitle>}\n                        //actions={[<a href='#'>This is a Link</a>]}\n                        >\n                            <figure className=\"card-profile-image\">\n                                <img src={this.props.user.profilepic} alt='Profile' className=\"circle z-depth-2 responsive-img profile-img\" />\n                            </figure>\n                            <Row>\n                                <Col s={6} l={6} className=\"offset-s4\">\n                                    <Row>\n                                        <div className=\"user-info\">\n                                            <h5 className=\"users-profile-header-name\">{this.props.user.firstName} {this.props.user.lastName}</h5>\n                                        </div>\n                                    </Row>\n                                    <Row className=\"user-chip-row\">\n                                        <Col s={4}>\n                                            <Chip>\n                                                <img className=\"plants-count-img\" src='https://cdn.pixabay.com/photo/2018/05/21/23/54/leaves-3420078_1280.jpg' alt='Contact Person' />\n                                                {this.state.gardenSize} Plants\n                                            </Chip>\n                                        </Col>\n                                        <Col s={4}>\n                                            <Chip>\n                                                <img src='https://cdn.pixabay.com/photo/2017/10/17/20/42/social-network-icon-2862113_1280.png' alt='Contact Person' />\n                                                35 Friends\n                                            </Chip>\n                                        </Col>\n                                        <Col s={4}>\n                                            <Chip>\n                                                <img src='https://cdn12.picryl.com/photo/2016/12/31/icon-contact-cloud-computer-communication-3d8f39-1024.png' alt='Contact Person' />\n                                                San Diego\n                                            </Chip>\n                                        </Col>\n                                    </Row>\n\n                                </Col>\n                            </Row>\n                        </Card>\n                    </Col>\n                </Row>\n            </wrapper>\n        );\n    }\n};\n\nexport default ProfileHeader;\n\n\n","import React from \"react\";\nimport \"./style.css\";\nimport { Card, Col, Collection, CollectionItem } from \"react-materialize\";\nimport {Link} from \"react-router-dom\";\n\n// By extending the React.Component class, Counter inherits functionality from it\nfunction ProfileSelector(props) {\n    //console.log(\"Rendering profile selector for \" );\n    //console.log(props.user);\n\n    // The render method returns the JSX that should be rendered\n    return (\n        <wrapper className=\"container\" id=\"profile-selection\">\n                <Col s={12} m={10} l={3}  className=\"offset-m1 offset-l1\">\n                    <Card title='Profile'>\n                        <Collection>\n                            <Link to=\"/profile/aboutme\"><CollectionItem onClick={() => props.activeComponent(\"about-me\")} className=\"profile-selector\" id=\"about-me\" href=\"/profile/aboutme\" active><i className=\"fas fa-user\"></i>About Me</CollectionItem></Link>\n                            <Link to=\"/profile/contactinfo\"><CollectionItem onClick={() => props.activeComponent(\"contact-info\")} className=\"profile-selector\" id=\"contact-info\" href=\"/profile/contactinfo\"><i className=\"fas fa-address-book\"></i>Contact Info</CollectionItem></Link>\n                            <Link to=\"/profile/notifications\"><CollectionItem onClick={() => props.activeComponent(\"notifications\")} className=\"profile-selector\" id=\"notifications\" href=\"/profile/notifications\"><i className=\"fas fa-bell\"></i>Notifications</CollectionItem></Link>\n                            <Link to=\"/profile/updatelogin\"><CollectionItem onClick={() => props.activeComponent(\"update-login\")} className=\"profile-selector\" id=\"update-login\" href=\"/profile/updatelogin\"><i className=\"fas fa-pencil-alt\"></i>Update Login</CollectionItem></Link>\n                            <Link to={{pathname:\"/profile/virtualgarden\", state:props.user}}><CollectionItem onClick={() => props.activeComponent(\"virtual-garden\")} className=\"profile-selector\" id=\"virtual-garden\" href=\"/profile/virtualgarden\"><i className=\"fas fa-leaf\"></i>Virtual Garden</CollectionItem></Link>\n                        </Collection>\n                    </Card>\n                </Col>\n        </wrapper>\n    );\n};\nexport default ProfileSelector;\n\n\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport { Card, Table } from \"react-materialize\";\nimport API from \"../../utils/API\";\n\n// By extending the React.Component class, Counter inherits functionality from it\nclass AboutMe extends Component {\n\n    state = {\n        gardenSize: 0\n    }\n\n    constructor(props) {\n        super(props);\n        let userName = this.props.user.username;\n        API.getVirtualGarden(userName).then((res) => {\n\n            // If the user has no virtual plants in their virtual garden yet,\n            // set 'my_plants' to an empty array.\n            // Else, sort the virtual garden so that the plants whose watering\n            // is overdue are displayed first\n            // console.log(\"Got virtual garden length \" + res.data.length)\n            this.setState({gardenSize: res.data.length})\n\n        });\n    }\n\n\n    render() {\n        // The render method returns the JSX that should be rendered\n        return (\n            <wrapper className=\"container\">\n                <Card className=\"hoverable\" title='About Me'\n                // actions={[<a href='#'><i className=\"fas fa-pencil-alt\"></i> Click Here To Edit</a>]}\n                >\n                    <Table className=\"striped\">\n                        <tbody>\n                            <tr>\n                                <td className=\"thead\"><i className=\"fas fa-seedling\"></i>First Name: </td>\n                                <td>{this.props.user.firstName}</td>\n                            </tr>\n                            <tr>\n                                <td className=\"thead\"><i className=\"fas fa-seedling\"></i>Last Name: </td>\n                                <td>{this.props.user.lastName}</td>\n                            </tr>\n                            <tr>\n                                <td className=\"thead\"><i className=\"fas fa-seedling\"></i>Plants in My Garden: </td>\n                                <td>{this.state.gardenSize}</td>\n                            </tr>\n                            <tr>\n                                <td className=\"thead\"><i className=\"fas fa-seedling\"></i>Friends: </td>\n                                <td>35</td>\n                            </tr>\n                            <tr>\n                                <td className=\"thead\"><i className=\"fas fa-seedling\"></i>About Me: </td>\n                                <td>{this.props.user.aboutme}</td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </Card>\n            </wrapper>\n        );\n    }\n};\n\nexport default AboutMe;\n\n\n","import React from \"react\";\nimport \"./style.css\";\nimport { Card } from \"react-materialize\";\n\n// By extending the React.Component class, Counter inherits functionality from it\nfunction ContactInfo(props) {\n\n    // The render method returns the JSX that should be rendered\n    return (\n        <wrapper className=\"container\">\n            <Card className=\"hoverable\" title='Contact Info' \n            // actions={[<a href='#'><i className=\"fas fa-pencil-alt\"></i> Click Here To Edit</a>]}\n            >\n                <table className=\"striped\">\n                    <tbody>\n                        <tr>\n                            <td className=\"thead\"><i className=\"fas fa-file-signature\"></i>First Name:</td>\n                            <td>{props.user.firstName}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"thead\"><i className=\"fas fa-file-signature\"></i>Last Name:</td>\n                            <td>{props.user.lastName}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"thead\"><i className=\"fas fa-at\"></i>Email:</td>\n                            <td>{props.user.username}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"thead\"><i className=\"fas fa-phone\"></i>Phone:</td>\n                            <td>{props.user.phone}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"thead\"><i className=\"fas fa-map-marked-alt\"></i>Zipcode</td>\n                            <td>{props.user.zipcode}</td>\n                        </tr>\n                        <tr>\n                            <td className=\"thead\"><i className=\"fas fa-map-marked-alt\"></i>City:</td>\n                            <td>{props.user.city}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </Card>\n        </wrapper>\n    );\n};\n\nexport default ContactInfo;\n\n\n","import React from \"react\";\nimport \"./style.css\";\n\n// By extending the React.Component class, Counter inherits functionality from it\nfunction NotificationIcon(props) {\n\n    // The render method returns the JSX that should be rendered\n    return (\n            <i className=\"notification-icon fas fa-circle\"></i>\n    );\n};\n\nexport default NotificationIcon;\n\n\n","import React from \"react\";\nimport \"./style.css\";\nimport NotificationIcon from \"../NotificationIcon\";\n\n// By extending the React.Component class, Counter inherits functionality from it\nfunction Notification(props) {\n\n    // The render method returns the JSX that should be rendered\n    return (\n            <tr className=\"notification-row\">\n                <td className=\"notification-icon-row\"><NotificationIcon /></td>\n                <td className=\"notification-date\">2 hours ago</td>\n                <td className=\"notification-sender\">Sender</td>\n                <td className=\"notification-message\">\"I noticed you live in the region and have a lot of awesome plants! Any tips?\"</td>\n                <td className=\"notification-checkbox\">\n                    <div className=\"checkbox-div\">\n                        <input onClick={() => props.click(\"button\")} id=\"notification-checkbox\"className=\"check-icon\" type=\"checkbox\" />\n                        <label id=\"cbx\"></label>\n                    </div>\n                </td>\n            </tr>\n    );\n};\n\nexport default Notification;\n\n\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport Notification from \"../Notification\";\nimport { Card, Table } from \"react-materialize\";\n\n// By extending the React.Component class, Counter inherits functionality from it\nclass NotificationsList extends Component {\n\n    state = {\n        name: \"value\"\n    }\n\n    changeNotificationStatus = (id) => {\n        console.log(id);\n        //TODO: use the passed in ID to find the relevant notification and update its completed status to true\n\n        //TODO: we also need a way to make sure the checkbox is already checked off if the notification is completed\n\n        //TODO: lastly, remove the red icon next to said notification\n        // document.getElementById(id)\n    }\n\n    // The render method returns the JSX that should be rendered\n    render() {\n\n        return (\n            <wrapper className=\"container\">\n                <Card className=\"hoverable\" title='Notifications'>\n                    <form>\n                        <Table className=\"highlight\" bordered>\n                            <thead>\n                                <tr>\n                                    <th className=\"thead icon\"><i className=\"fas fa-bell\"></i></th>\n                                    <th className=\"thead date\">Date</th>\n                                    <th className=\"thead from\">From</th>\n                                    <th className=\"thead message\">Message</th>\n                                    <th className=\"thead completed\">Completed</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <Notification click={this.changeNotificationStatus} />\n                            </tbody>\n                        </Table>\n                    </form>\n                </Card>\n            </wrapper>\n        );\n    }\n};\n\nexport default NotificationsList;\n\n\n\n\n\n","import React from \"react\";\n// import \"./style.css\";\nimport { Card, Table } from \"react-materialize\";\n\n// By extending the React.Component class, Counter inherits functionality from it\nfunction UpdateLogin(props) {\n\n    // The render method returns the JSX that should be rendered\n    return (\n        <wrapper className=\"container\">\n            <Card className=\"hoverable\" title='Update Login' \n            // actions={[<a href='#'><i class=\"fas fa-share-square\"></i> Submit Updated Information</a>]}\n            >\n                <Table className=\"\">\n                    <tbody>\n                        <tr>\n                            <td className=\"thead\"><i className=\"fas fa-envelope\"></i>Email:</td>\n                            <td><input placeholder={props.user.username} /></td>\n                        </tr>\n                        <tr>\n                            <td className=\"thead\"><i className=\"fas fa-key\"></i>Password:</td>\n                            <td><input placeholder=\"******\" /></td>\n                        </tr>\n                    </tbody>\n                </Table>\n            </Card>\n        </wrapper>\n    );\n};\n\nexport default UpdateLogin;\n\n\n","import React from \"react\";\nimport { Modal, Row, Input, Button } from \"react-materialize\";\nimport API from \"../../utils/API\";\nimport Swal from \"sweetalert2\";\n\nclass EditModal extends React.Component {\n\n    state = {\n        user: {},\n        plantId: \"\",\n        plantName: \"\",\n        lastWatered: \"\",\n        wateringFrequency: \"\"\n    }\n\n    componentDidMount() {\n        this.setState({ plantId: this.props.plantId });\n        this.setState({ user: this.props.user });\n    }\n\n    handleChange = (event) => {\n        // console.log(event.target.name, \"here is the name of the event\");\n        // console.log(event.target.value, \"here is the event target value\");\n        this.setState({ [event.target.name]: event.target.value });\n    }\n\n    handleSubmit = () => {\n        console.log(this.state);\n        let username = this.state.user.username;\n        let id = this.state.plantId;\n        let plantData = {\n            name: this.state.plantName,\n            lastWatered : this.state.lastWatered,\n            wateringFrequency: this.state.wateringFrequency\n        };\n        API.editPlant(username, id, plantData)\n            .then(res => {\n                console.log(res);\n\n            })\n            .catch(err => console.log(err));\n    }\n    \n    render() {    \n        return(\n            <Modal\n            header='Add a new plant to your garden'\n            trigger={<Button className=\"virtual-plant-button\"><i class=\"fas fa-pencil-alt\"></i>Edit</Button>}\n            className=\"yellow lighten-5\"\n            >\n                <Row>\n                    <Input name=\"plantName\" type=\"text\" label=\"Give your plant a name\" s={12} onChange={this.handleChange} />\n                    <Input name=\"lastWatered\" type=\"date\" format=\"mmmm-dd-yy\" label=\"Last watered on\" s={12} onChange={this.handleChange} />\n                    <Input name=\"wateringFrequency\" type=\"number\" label=\"watering frequency\" s={12} onChange={this.handleChange} />\n                </Row>\n\n                <Button onClick={()=>this.handleSubmit(this.state)}>\n                    Submit\n                </Button>\n            </Modal>\n\n        )\n    }\n}\n\nexport default EditModal;","import React from \"react\";\nimport { Card, CardTitle, Button } from \"react-materialize\";\nimport \"./VirtualPlant.css\";\nimport EditPlant from \"../VirtualPlantEditModal\";\n\nconst moment = require('moment');\n\nlet warningStyle = {\n  color: 'darkorange',\n  fontWeight:'bold'\n}\nlet infoStyle = {\n  fontWeight:'bold'\n}\n\n\n/**\n * This is the VirtualPlant component. It represents\n * a virtual plant in the user's virtual garden.\n * \n * It is essentially a Materialize Card.\n * \n * We use the 'reveal' attribute to reveal additional info\n * on the plant - e.g. when the next watering is due, and\n * if watering is overdue.\n * \n * @param {*} props \n *            \n * props.name : name of the virtual plant \n * props.image : image of the virtual plant\n * props.lastWatered : last time this plant was watered\n * props.wateringDue : boolean indicating that \n *                     its time to water this plant\n */\n\nclass VirtualPlant extends React.Component {\n\n  state = {\n    isWateringOverdue : false,\n    daysOverdue : 0\n  }\n\n  constructor(props){\n    super(props);\n    let { daysOverdue } = props;\n\n    this.state.daysOverdue = daysOverdue;\n\n    if(daysOverdue >= 0){\n      this.state.isWateringOverdue = true;\n    }\n  }\n\n  PlantInfo = (plantName, lastWatered, daysOverdue, wateringFrequency, handleWateringDone) => {\n\n    let warningMsg = \"\";\n  \n    if (daysOverdue >= 0) {\n  \n      if(daysOverdue === 0){\n        warningMsg = \"Watering due today\";\n      } else {\n        let dayOrDays = (daysOverdue > 1 ? \"days\" : \"day\");\n        warningMsg = \"Watering overdue by \" + daysOverdue + \" \" + dayOrDays;\n      }\n  \n      return (\n        <div>\n          <p style={warningStyle}>Last watered : {moment(lastWatered).format(\"ddd MMM Do\")}</p>\n          <p style={warningStyle}>{warningMsg}</p>\n          <Button className=\"virtual-plant-button\" onClick={() =>  handleWateringDone(plantName)}>\n            <i class=\"fas fa-tint\"></i>Water Me\n          </Button>\n          <EditPlant \n            plantId={this.props.plantId}\n            user={this.props.user}\n          />\n          <Button className=\"virtual-plant-button\">\n            <i class=\"fas fa-camera\"></i>Upload Photos\n          </Button>\n        </div>\n      )\n    } else {\n      let nextWatering = moment(lastWatered).add(wateringFrequency, 'days');\n      //console.log(nextWatering);\n      return (\n        <div>\n          <p>Last watered : {moment(lastWatered).format(\"ddd MMM Do\")} </p>\n          <p>Next watering due on : {nextWatering.format(\"ddd MMM Do\")}</p>\n          <EditPlant \n            plantId={this.props.plantId}\n            user={this.props.user}\n          />\n          <Button className=\"virtual-plant-button\">\n            <i class=\"fas fa-camera\"></i>Upload Photos\n          </Button>\n        </div>\n      )\n    }\n  }\n  \n\n  handleWateringDone = () => {\n    let {plantName, wateringCallback} = this.props;\n    \n    wateringCallback(plantName);\n  }\n\n  // componentDidMount() {\n  //   console.log(this.props.user);\n  // }\n\n  /**\n   * @function: render\n   * \n   * Render function for this App.\n   */\n  render() {\n\n    let { plantImage, plantName, lastWatered, daysOverdue, wateringFrequency } = this.props;\n\n    let nextWatering = moment(lastWatered).add(wateringFrequency, 'days');\n\n    return (\n      <Card className='medium'\n        header={<CardTitle reveal image={plantImage} waves='light' />}\n  \n        reveal={this.PlantInfo(plantName, lastWatered, daysOverdue, wateringFrequency, this.handleWateringDone)}\n  \n        title={daysOverdue >= 0 ?\n          <span style={warningStyle}>{plantName}</span>\n          :  <span style={infoStyle}>{plantName}</span>}\n      >\n        {/* If watering is overdue, display a warning message under card image.\n            Otherwise display the next watering date */}\n        {daysOverdue >= 0 ?\n          <p style={warningStyle}>\n            {/*<i class=\"fas fa-exclamation-triangle\" style={warningStyle}></i>*/}\n            Watering overdue\n            <Button className=\"virtual-plant-button\" onClick={() =>  this.handleWateringDone(plantName)}>\n              <i className=\"fas fa-tint\"> </i>Water me\n            </Button>\n          </p>\n          :\n          <p>Next watering due on:\n            <br></br>\n            <b>{nextWatering.format(\"ddd MMM Do\")}</b>\n          </p>\n        }\n      </Card>\n    );\n  }\n\n\n}\n\nexport default VirtualPlant;\n","import React from \"react\";\nimport { Button, Row, Input, Modal, Autocomplete } from \"react-materialize\";\nimport API from \"../../utils/API\";\nimport Swal from 'sweetalert2';\n\nconst moment = require('moment');\n\n\n/**\n * This component allows the user to add a new virtual plant\n * to their virtual garden.\n * \n * It is a MModal that contains a form.\n * .\n * @param {*} props \n *            \n * props.name : name of the virtual plant \n * props.image : image of the virtual plant\n * props.lastWatered : last time this plant was watered\n * props.wateringDue : boolean indicating that \n *                     its time to water this plant\n */\nclass  VirtualPlantAddModal extends React.Component {\n\n\tstate = {\n\t\tplantNames: {},\n\t\tvalue:'',\n\t\tname:'',\n\t\tcommonName:'',\n\t\timage:'',\n\t\tlastWatered:'',\n\t\twateringFrequency:''\n\t}\n\n\tcomponentDidMount() {\n\t\tAPI.getPlants()\n\t\t\t.then((res) => this.convertFunc(res.data))\n\t\t\t.catch((err) => console.log(err));\n\t}\n\n\tconvertFunc(data) {\n\t\tlet plantNamesArr = [];\n\t\tdata.map(plant => {\n\t\t\tlet lowerCaseName = plant.commonName.toLowerCase();\n\t\t\tplantNamesArr.push(lowerCaseName);\n\t\t});\n\n\t\tconst plantNamesObj = {};\n\t\tfor(const key of plantNamesArr) {\n\t\t\tplantNamesObj[key] = null;\n\t\t}\n\n\t\t// console.log(plantNamesObj);\n\t\tthis.setState({plantNames: plantNamesObj});\n\t}\n\n\thandleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n\t}\n\t\n\taddNewPlant = () => {\n\t\tlet {name, commonName, lastWatered, wateringFrequency} = this.state;\n\t\t//let newPlant = {};\n\t\tlet virtualGardenCallback = this.props.handleAdd;\n\n\t\tlet newPlantForm = new FormData();\n\n\t\t// Get the uploaded plant image\n\t\tlet plantImage = document.getElementById(\"plant-image\").files[0];\n\n\t\tif(!plantImage){\n\t\t\t// Error handling\n\t\t}\n\n\t\tnewPlantForm.append(\"image\", plantImage);\n\n\t\t// Fill up the 'newPlant' object with the user input. We will submit this\n\t\t// object to the back-end.\n\t\tnewPlantForm.append(\"name\", name);\n\t\tnewPlantForm.append(\"commonName\", commonName);\n\n\t\t// Need this code because the date string retured by react materialize date picker\n\t\t// is not a valid moment object.\n\t\tlet dateComponents = lastWatered.split(\" \");\n\t\tconsole.log(dateComponents);\n    if(dateComponents.length === 3) {\n\t\t\t// Remove the trailing comma from the month string\n\t\t\tdateComponents[1] = dateComponents[1].slice(0, 3);\n\t\t\tlet temp = dateComponents[0];\n\t\t\tdateComponents[0] = dateComponents[1];\n\t\t\tdateComponents[1] = temp;\n\t\t\tlastWatered = dateComponents.join(\" \");\n\t\t\t// console.log(\"Last watered on \" + lastWatered);\n\t\t}\t\t\n\t\t\n\t\tlet lastWateredFormatted = moment(lastWatered, \"MMM DD YYYY\").local().format(\"YYYY-MM-DDTHH:mm\");\n\n\t\tnewPlantForm.append(\"lastWatered\", lastWateredFormatted);\n\t\tnewPlantForm.append(\"wateringFrequency\", parseInt(wateringFrequency));\n\t\t\n\t\tlet userName = this.props.user.username;\n\t\tnewPlantForm.append(\"userId\", this.props.user._id);\n\n\t\t//console.log(\"Will add a new plant with the following details\");\n\t\t//console.log(userName, newPlant);\n\n\t\t// console.log(newPlantForm);\n\t\tconsole.log(userName);\n\n\t\t// Call API to post this new plant to the database\n\t\tAPI.addPlant(userName, newPlantForm)\n\t\t\t.then(res => {\n\t\t\t\tconsole.log(\"New plant added\");\n\t\t\t\tconsole.log(res.data);\n\t\t\t\t\n\t\t\t\tSwal.fire({\n          title: 'Added to garden!',\n          type: 'success',\n          showConfirmButton: false,\n          showCancelButton: false,\n          backdrop: true,\n          // toast: true,\n          timer: 1100,\n          // position: \"top-end\",\n          customClass: \"success-toast\"\n          // confirmButtonText: 'Ok'\n        }).then(() => {\n\t\t\t\t\tvirtualGardenCallback(res.data);\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tSwal.fire({\n          title: 'oops - something went wrong, try again',\n          type: 'error',\n          showConfirmButton: false,\n          showCancelButton: false,\n          // toast: true,\n          timer: 1000,\n          // position: \"top-end\",\n          customClass: \"fail-toast\"\n          // confirmButtonText: 'Ok'\n        });\n\t\t\t});\n\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<Modal\n\t\t\t\theader='Add a new plant to your garden'\n\t\t\t\ttrigger={<Button>Add New Plant</Button>}\n\t\t\t\tclassName=\"yellow lighten-5\"\n\t\t\t>\n\t\t\t\t<Row>\n\t\t\t\t\t<Input name=\"name\" label=\"Give your plant a name\" s={12} onChange={this.handleChange} />\n\t\t\t\t\t<Autocomplete title='What type of plant is it?' data={this.state.plantNames} />\n\t\t\t\t\t<Input name=\"image\" type=\"file\" label=\"Upload Image\" id=\"plant-image\" s={12} onChange={this.handleChange} />\n\t\t\t\t\t<Input name=\"lastWatered\" type=\"date\" format=\"mmmm-dd-yy\" label=\"Last watered on\" s={12} onChange={this.handleChange} />\n\t\t\t\t\t<Input name=\"wateringFrequency\" label=\"watering frequency\" s={12} onChange={this.handleChange} />\n\t\t\t\t</Row>\n\n\t\t\t\t<Button onClick={()=>this.addNewPlant(this.state)}>\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\t\t\t</Modal>\n\t\t);\n\t}\n  \n}\n\nexport default VirtualPlantAddModal;\n","import React from \"react\";\n//import sample_plants  from \"./sample_plants.json\";\nimport VirtualPlant from \"../VirtualPlant\";\n//import {Row, Col, Button } from \"react-materialize\";\nimport {Row, Col } from \"react-materialize\";\n\nimport API from \"../../utils/API\";\nimport VirtualPlantAddModal from \"../VirtualPlantAddModal/index.js\";\n\nimport Swal from 'sweetalert2';\n\nconst moment = require('moment');\n\n/**\n * VirtualGarden react component\n */\nclass VirtualGarden extends React.Component {\n\tstate = {\n\t\tmy_plants : []\n\t}\n\n\t/**\n\t * Constructor for this component.\n\t * \n\t * Fetch the user's plants from the database and \n\t * update 'myPlants' in the component state.\n\t * \n\t * We need to do this *before* rendering the virtual\n\t * garden.\n\t */\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.getGarden();\n\t}\n\n\thandleChange(event) {\n    //console.log(\"typing\");\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n\t/**\n\t * @function: getGarden\n\t * \n\t * Fetches the user's virtual garden from the backend.\n\t */\n\tgetGarden = () => {\n\t\t//console.log(\"Checking passed in user param\");\n\t\t//console.log(this.props.location.state);\n\n\t\tlet userName = this.props.location.state.username;\n\t\tconsole.log(\"Username is \", userName);\n\t\tAPI.getVirtualGarden(userName).then((res) => {\n\n\t\t\t// If the user has no virtual plants in their virtual garden yet,\n\t\t\t// set 'my_plants' to an empty array.\n\t\t\t// Else, sort the virtual garden so that the plants whose watering\n\t\t\t// is overdue are displayed first\n\t\t\tif(res.data.length === 0) {\n\t\t\t\tthis.setState({my_plants : []});\n\t\t\t} else{\n\t\t\t\tthis.sortPlants(res.data);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * @function:plantAdded\n\t * \n\t * This is the callback invoked when a new plant is added to\n\t * the virtual garden. It adds the newly added plant to the \n\t * current plants list.  It then calls sortPlants to sort the\n\t * plants by most overdue for watering. \n\t * \n\t * Eventually, the garden gets re-rendered in sortPlants.\n\t * \n\t */\n\tplantAdded = (newPlant) => {\n\t\t//console.log(\"Back in virtual garden, new plant added\");\n\t\t//console.log(newPlant);\n\n\t\tlet currentPlants = this.state.my_plants;\n\n\t\tcurrentPlants.push(newPlant);\n\n\t\tthis.sortPlants(currentPlants);\n\t}\n\n\t/**\n\t * @function:sortPlants\n\t * \n\t * This function sorts the plants in the user's virtual garden by\n\t * days overdue for watering. The most overdue plants are first.\n\t * \n\t * After sorting the garden, it invokes setState to render the \n\t * garden.\n\t */\n\tsortPlants = (plantList) => {\n\t\t\n\t\tlet today = moment();\n\n\t\t/* Sort the plants so that the ones requiring attention are\n\t\t\t displayed first */\n\t\tplantList.forEach((plant) => {\n\n\t\t\tlet lastWateredDate = moment(plant.lastWatered);\n\n\t\t\t//console.log(`${plant.name} was last watered on ${plant.lastWatered}`);\n\n\t\t\t/* Get the difference between last watered date and today */\n\t\t\tlet daysSinceLastWatered = today.diff(lastWateredDate, 'days');\n\n\t\t\t//console.log(\"It has been \" + daysSinceLastWatered + \" days\"\n\t\t\t//+ \" since \" + plant.name + \" was watered\");\n\n\t\t\tplant.daysOverdue = daysSinceLastWatered - plant.wateringFrequency;\n\t\t});\n\n\t\tplantList.sort( (plant1, plant2) => {\n\t\t\treturn plant2.daysOverdue - plant1.daysOverdue\n\t\t});\n\n\t\tthis.setState( { my_plants : plantList } );\n\t}\n\n\t/**\n\t * @function: wateringDone\n\t * This is the callback function invoked when the user marks any \n\t * virtual plant as 'watered'.\n\t * \n\t */\n\twateringDone = (plantName) => {\n\t\tlet my_plants_updated = this.state.my_plants;\n\n\t\t//event.preventDefault();\n\n\t\t//console.log(plantName);\n\n\t\t//console.log(\"User has watered \" + plantName);\n\n\t\tlet index = my_plants_updated.findIndex(plant => plant.name === plantName);\n\n\t\tmy_plants_updated[index].lastWatered = moment().format(\"YYYY-MM-DD\");\n\t\tlet justWatered = my_plants_updated[index].lastWatered;\n\t\tlet watered = {\n\t\t\tlastWatered: justWatered\n\t\t};\n\t\tlet userName = this.props.location.state.username;\n\t\tconsole.log(watered);\n\t\tconsole.log(my_plants_updated[index]._id);\n\n\t\t// Todo: Make API Call to back-end\n\t\tAPI.updateWatering(userName, my_plants_updated[index]._id, watered)\n\t\t\t.then(res =>\n\t\t\t\tSwal.fire({\n\t\t\t\t\ttitle: plantName + ' - watering done!',\n\t\t\t\t\ttype: 'success',\n\t\t\t\t\tshowConfirmButton: false,\n\t\t\t\t\tshowCancelButton: false,\n\t\t\t\t\tbackdrop: true,\n\t\t\t\t\t// toast: true,\n\t\t\t\t\ttimer: 1100,\n\t\t\t\t\t// position: \"top-end\",\n\t\t\t\t\tcustomClass: \"success-toast\"\n\t\t\t\t\t// confirmButtonText: 'Ok'\n\t\t\t\t}).then( () => this.sortPlants(my_plants_updated))\n\t\t\t)\n\t\t\t.catch(err => console.log(err));\n\n\t\t//this.sortPlants(my_plants_updated);\n\t}\n\n\t/**\n   * @function: render\n   * \n   * Render function for this App.\n   */\n  render() {\n\t\tconsole.log(\"Rendering virtual garden\");\n\t\tconsole.log(this.props.user);\n\t\tlet num_plants = this.state.my_plants.length;\n\t\tif(!num_plants){\n\t\t\treturn(\n\t\t\t\t<div>\n\t\t\t\t\t<h5>Get started with your virtual garden!</h5>\n\t\t\t\t\t<VirtualPlantAddModal \n\t\t\t\t\t\thandleAdd={this.plantAdded}\n\t\t\t\t\t\tuser={this.props.user}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t{this.state.my_plants.map( (plant, index) => (\n\t\t\t\t\t\t\t<Col s={12} m={10} l={4}>\n\t\t\t\t\t\t\t\t<VirtualPlant\n\t\t\t\t\t\t\t\t\tkey={index.toString()}\n\t\t\t\t\t\t\t\t\tplantId={plant._id}\n\t\t\t\t\t\t\t\t\tplantImage={plant.image[0]}\n\t\t\t\t\t\t\t\t\tplantName={plant.name}\n\t\t\t\t\t\t\t\t\tlastWatered={plant.lastWatered}\n\t\t\t\t\t\t\t\t\tdaysOverdue={plant.daysOverdue}\n\t\t\t\t\t\t\t\t\twateringFrequency={plant.wateringFrequency}\n\t\t\t\t\t\t\t\t\twateringCallback={this.wateringDone}\n\t\t\t\t\t\t\t\t\tuser={this.props.user}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Row>\n\t\t\t\t\t<VirtualPlantAddModal \n\t\t\t\t\t\thandleAdd={this.plantAdded}\n\t\t\t\t\t\tuser={this.props.user}\n\t\t\t\t\t>\n\t\t\t\t\t</VirtualPlantAddModal>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n  }\n}\n\nexport default VirtualGarden;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport \"./style.css\";\nimport AboutMe from \"../AboutMe\";\nimport ContactInfo from \"../ContactInfo\";\nimport NotificationsList from \"../NotificationList\";\nimport UpdateLogin from \"../UpdateLogin\";\nimport VirtualGarden from \"../VirtualGarden\";\nimport { Col } from \"react-materialize\";\n\n// By extending the React.Component class, Counter inherits functionality from it\nclass ProfileContent extends Component {\n\n\n        render() {\n            let myProps = this.props.user;\n            \n            // The render method returns the JSX that should be rendered\n            return (\n                <wrapper className=\"container profile-content\">\n                    <Col l={7} m={10} s={12} className=\"offset-m1\">\n                        <Switch>\n                            {/* this is where i think i need the routing for these compenents */}\n                            <Route exact path=\"/profile\" render={props => <AboutMe {...props} user={myProps}/>} />\n                            <Route exact path=\"/profile/aboutme\" render={props => <AboutMe {...props} user={myProps}/>} />\n                            <Route exact path=\"/profile/contactinfo\" render={props => <ContactInfo {...props} user={myProps}/>} />\n                            <Route exact path=\"/profile/notifications\" render={props => <NotificationsList {...props} user={myProps}/>} />\n                            <Route exact path=\"/profile/updatelogin\" render={props => <UpdateLogin {...props} user={myProps}/>} />\n                            <Route exact path=\"/profile/virtualgarden\" render={props => <VirtualGarden {...props} user={myProps}/>}/>\n                        </Switch>\n                    </Col>\n                </wrapper>\n            )\n        };\n    };\n\n\n    export default ProfileContent;\n\n\n","import React, { Component } from 'react';\n// import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n// import \"./style.css\";\nimport { Row } from \"react-materialize\";\nimport ProfileSelector from \"../ProfileSelector\";\nimport ProfileContent from \"../ProfileContent\";\n\n// By extending the React.Component class, Counter inherits functionality from it\nclass ProfileBody extends Component {\n\n    activeComponent = value => {\n\n        //grab all elements with the profile-selector class\n        var elems = document.querySelectorAll(\".profile-selector\");\n\n        //for each of those elements, remove the active class\n        [].forEach.call(elems, function (el) {\n            el.classList.remove(\"active\");\n        });\n\n        //grab the element that the user clicked on\n        var selection = document.getElementById(value);\n\n        //add the active class\n        selection.classList.add(\"active\");\n\n    }\n\n\n    // The render method returns the JSX that should be rendered\n    render() {\n\n        return (\n            <Row className=\"profile-content\">\n                <wrapper className=\"container profile-content\">\n                    <ProfileSelector user={this.props.user} activeComponent={this.activeComponent} />\n                    <ProfileContent user={this.props.user} />\n                </wrapper>\n            </Row>\n        );\n    }\n};\n\nexport default ProfileBody;\n\n\n","import React, { Component } from \"react\";\nimport NavbarProfile from \"../components/Navbar-profile\";\nimport ProfileHeader from \"../components/ProfileHeader\";\nimport ProfileBody from \"../components/ProfileBody\";\nimport Wrapper from \"../components/Wrapper\";\nimport axios from \"axios\";\n// import $ from \"jquery\";\n\n\n// By extending the React.Component class, Counter inherits functionality from it\nclass Profile extends Component {\n\n    render() {\n        \n        // The render method returns the JSX that should be rendered\n        return (\n            <Wrapper>\n                <NavbarProfile user={this.props.user} handleLogout={this.props.handleLogout}/>\n                <ProfileHeader user={this.props.user}  />\n                <ProfileBody user={this.props.user} />\n            </Wrapper>\n        );\n\n    }\n};\n\n\nexport default Profile;\n\n\n","import React from \"react\";\nimport \"./style.css\";\n// import { Card, CardTitle } from \"react-materialize\";\n\nfunction TeamProfileCard(props) {\n    return(\n        <div className=\"col s3\">\n            <div className=\"card medium\">\n                <div className=\"card-image\">\n                    <img alt={props.name} src={props.image} />\n                    <span className=\"card-title\">{props.name}</span>\n                </div>\n                <div className=\"card-content\">\n                    <p id=\"name\">{props.intro}</p>\n                </div>\n                <div className=\"card-action\">\n                    <a rel=\"noreferer\" target=\"_blank\" href={props.personalWebLink}><i class=\"fas fa-home fa-lg\"></i></a>\n                    <a rel=\"noreferer\" target=\"_blank\" href={props.github}><i class=\"fab fa-github fa-lg\"></i></a>\n                </div>\n            </div>\n        </div>       \n    )\n}\n\nexport default TeamProfileCard;","import React, { Component } from 'react';\nimport Navbar from \"../components/Navbar\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Wrapper from \"../components/Wrapper\";\nimport BodyWraper from \"../components/BodyWrapper\";\nimport FooterDiv from \"../components/Footer\";\nimport TeamProfileCard from \"../components/TeamProfileCard\";\nimport Teammates from \"../teamProfile.json\";\nimport Greeting from \"../components/Greeting\";\n\nclass TeamProfile extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Jumbotron>\n          <Navbar user={this.props.user} onChange={this.props.onChange} handleLogin={this.props.handleLogin} handleSignup={this.props.handleSignup} handleLogout={this.props.handleLogout}/>\n          <Greeting lineOne=\"Hey there,\" lineTwo=\"this is our BeLeaf team!\" />\n        </Jumbotron>\n        <BodyWraper>\n            <div className=\"row\">\n                {Teammates.map((teammate) => (\n                    <TeamProfileCard \n                        key={teammate.name}\n                        name={teammate.name}\n                        image={teammate.image}\n                        personalWebLink={teammate.personalWebLink}\n                        github={teammate.github}\n                        intro={teammate.intro}\n                    />\n                ))}\n            </div>\n        </BodyWraper>\n        <FooterDiv />\n      </Wrapper>\n    );\n  }\n}\n\nexport default TeamProfile;\n","import React from \"react\";\nimport API from \"../../utils/API\";\nimport PlantCards from \"../PlantCards\";\nimport {Pagination, Col, Row, ProgressBar, Input} from \"react-materialize\";\n\nclass FlowerDepartment extends React.Component {\n    state = {\n        flowers: [],\n        activeCards: [],\n        activePage: \"\",\n        pageItem: \"\",\n        loading: true,\n        plantNames: {},\n        input: \"\"\n    };\n\n    componentDidMount() {\n        let category = \"flowers\";\n        this.loadFlowers(category);\n    }\n\n    loadFlowers(category) {\n        API.getCategory(category)\n            .then(res => {\n                // console.log(res.data);\n                this.setFlower(res.data);\n                this.convertFunc(res.data);\n            })\n            .catch(err => console.log(err));\n    }\n\n    setFlower(data) {\n        this.setState({flowers: data});\n        this.setPageItem();\n        this.pushUpItems(0);\n    }\n\n    setActivePage(pageNum) {\n        this.setState({activePage: pageNum});\n    }\n\n    setPageItem() {\n        let itemNum;\n        if(this.state.flowers.length < 18) {\n            itemNum = this.state.flowers.length;\n            // console.log(itemNum);\n        }\n        else {\n            itemNum = 18;\n        }\n        let pageItem = Math.ceil(this.state.flowers.length / itemNum);\n        // console.log(pageItem);\n        this.setState({pageItem: pageItem});\n    }\n\n    pushUpItems(event) {\n        // console.log(this.state.flowers);\n        if(event === 0) {\n            event = 1;\n        }\n        // console.log(event);\n        let length = event * 18;\n        let tempArray = [];\n        for(var i = (length - 18); i < length; i++) {\n            // console.log(this.state.flowers[length]);\n            if(this.state.flowers[i] !== undefined) {\n                tempArray.push(this.state.flowers[i]);\n            }\n        }\n        // console.log(tempArray);\n        this.setState({ activeCards: tempArray });\n        this.setState({ loading: false });\n\n        window.scrollTo(0, 0);\n    }\n\n    convertFunc(data) {\n\t\tlet plantNamesArr = [];\n\t\tdata.map(plant => {\n\t\t\tlet lowerCaseName = plant.commonName.toLowerCase();\n\t\t\tplantNamesArr.push(lowerCaseName);\n\t\t});\n\n\t\tconst plantNamesObj = {};\n\t\tfor(const key of plantNamesArr) {\n\t\t\tplantNamesObj[key] = null;\n\t\t}\n\n\t\tconsole.log(plantNamesObj);\n\t\tthis.setState({plantNames: plantNamesObj});\n    }\n    \n    handleOnChange(event) {\n        let inputPlant = event.target.value.toUpperCase();\n        this.setState({input: inputPlant})\n    }\n\n    render() {\n        if(this.state.input === \"\") {\n            return(\n                (this.state.loading ? \n                    <ProgressBar />\n                    :\n                    <div className=\"content\">\n                        <Row>\n                            <Input\n                                s={7}\n                                placeholder=\"Enter the name of the flower\"\n                                onChange={(event) => {this.handleOnChange(event)}}\n                            />\n                        </Row>\n                        <div className=\"row\">\n                            {this.state.activeCards.map(item => (\n                                <Col s={12} m={10} l={4}>\n                                    <PlantCards\n                                        key={item._id}\n                                        id={item._id} \n                                        commonName={item.commonName}\n                                        photo={item.photoURL}\n                                        zones={item.zone}\n                                        plantDetails={item.plantAttrURL}\n                                        variety={item.variety}\n                                        category={item.plantCategories[0]}\n                                    />\n                                </Col>\n                            ))}\n                        </div>\n                        <Pagination items={this.state.pageItem} activePage={this.state.activePage} maxButtons={this.state.pageItem} onSelect={(event) => this.pushUpItems(event)} />\n                    </div>\n                )\n            );\n        }\n        else {\n            return(\n                <div className=\"content\">\n                    <Row>\n                        <Input\n                            s={7}\n                            placeholder=\"Enter the name of the flower\"\n                            onChange={(event) => {this.handleOnChange(event)}}\n                        />\n                    </Row>\n                    <div className=\"row\">\n                        {this.state.flowers\n                            .filter(item => item.commonName.toUpperCase().includes(this.state.input))\n                            .map((item) => (\n                                <Col s={12} m={10} l={4}>\n                                    <PlantCards\n                                        key={item._id}\n                                        id={item._id} \n                                        commonName={item.commonName}\n                                        photo={item.photoURL}\n                                        zones={item.zone}\n                                        plantDetails={item.plantAttrURL}\n                                        variety={item.variety}\n                                        category={item.plantCategories[0]}\n                                    />\n                                </Col>\n                                )\n                            )\n                        }\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default FlowerDepartment;","import React, { Component } from 'react'; \nimport Navbar from \"../components/Navbar\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Wrapper from \"../components/Wrapper\";\nimport BodyWraper from \"../components/BodyWrapper\";\nimport Greeting from \"../components/Greeting\";\nimport FooterDiv from \"../components/Footer\";\nimport FlowerDepartment from \"../components/FlowerDepartment\";\n\nclass Flowers extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Jumbotron>\n          <Navbar user={this.props.user} onChange={this.props.onChange} handleLogin={this.props.handleLogin} handleSignup={this.props.handleSignup} handleLogout={this.props.handleLogout}/>\n          <Greeting lineOne=\"Flowers\" />\n        </Jumbotron>\n        <BodyWraper>\n          <FlowerDepartment />\n        </BodyWraper>\n        <FooterDiv />\n      </Wrapper>\n    );\n  }\n}\n\nexport default Flowers;\n","import React from \"react\";\nimport API from \"../../utils/API\";\nimport PlantCards from \"../PlantCards\";\n//import {Pagination, Col, Button} from \"react-materialize\";\nimport {Pagination, Col, ProgressBar, Row, Input} from \"react-materialize\";\n\nclass FruitsDepartment extends React.Component {\n    state = {\n        fruits: [],\n        activeCards: [],\n        activePage: \"\",\n        pageItem: \"\",\n        loading: true,\n        plantNames: {},\n        input: \"\"\n    };\n\n    componentDidMount() {\n        let category = \"fruits\";\n        this.loadFruits(category);\n    }\n\n    loadFruits(category) {\n        API.getCategory(category)\n            .then(res => {\n                // console.log(res.data);\n                this.setFruit(res.data);\n                this.convertFunc(res.data);\n            })\n            .catch(err => console.log(err));\n    }\n\n    setFruit(data) {\n\n        this.setState({fruits: data});\n        this.setPageItem();\n        this.pushUpItems(0);\n    }\n\n    setActivePage(pageNum) {\n        this.setState({activePage: pageNum});\n    }\n\n    setPageItem() {\n        let itemNum;\n        if(this.state.fruits.length < 18) {\n            itemNum = this.state.fruits.length;\n            // console.log(itemNum);\n        }\n        else {\n            itemNum = 18;\n        }\n        let pageItem = Math.ceil(this.state.fruits.length / itemNum);\n        // console.log(pageItem);\n        this.setState({pageItem: pageItem});\n    }\n\n    pushUpItems(event) {\n        if(event === 0) {\n            event = 1;\n        }\n        // console.log(event);\n        let length = event * 18;\n        let tempArray = [];\n        for(var i = (length - 18); i < length; i++) {\n            if(this.state.fruits[i] !== undefined) {\n                tempArray.push(this.state.fruits[i]);\n            }\n        }\n        // console.log(tempArray);\n        this.setState({ activeCards: tempArray });\n        this.setState({ loading: false });\n\n        window.scrollTo(0, 0);\n    }\n\n    convertFunc(data) {\n\t\tlet plantNamesArr = [];\n\t\tdata.map(plant => {\n\t\t\tlet lowerCaseName = plant.commonName.toLowerCase();\n\t\t\tplantNamesArr.push(lowerCaseName);\n\t\t});\n\n\t\tconst plantNamesObj = {};\n\t\tfor(const key of plantNamesArr) {\n\t\t\tplantNamesObj[key] = null;\n\t\t}\n\n\t\tconsole.log(plantNamesObj);\n\t\tthis.setState({plantNames: plantNamesObj});\n    }\n\n    handleOnChange(event) {\n        let inputPlant = event.target.value.toUpperCase();\n        this.setState({input: inputPlant})\n    }\n\n    render() {\n        if(this.state.input === \"\") {\n            return(\n                (this.state.loading ? \n                    <ProgressBar />\n                    :\n                    <div className=\"content\">\n                        <Row>\n                            <Input\n                                s={7}\n                                placeholder=\"Enter the name of the fruit\"\n                                onChange={(event) => {this.handleOnChange(event)}}\n                            />\n                        </Row>\n                        <div className=\"row\">\n                            {this.state.activeCards.map(item => (\n                                <Col s={12} m={10} l={4}>\n                                    <PlantCards\n                                        key={item._id}\n                                        id={item._id} \n                                        commonName={item.commonName}\n                                        photo={item.photoURL}\n                                        zones={item.zone}\n                                        plantDetails={item.plantAttrURL}\n                                        variety={item.variety}\n                                        category={item.plantCategories[0]}\n                                    />\n                                </Col>\n                            ))}\n                        </div>\n                        <Pagination items={this.state.pageItem} activePage={this.state.activePage} maxButtons={this.state.pageItem} onSelect={(event) => this.pushUpItems(event)} />\n                    </div>\n                )\n            );\n        }\n        else {\n            return(\n                <div className=\"content\">\n                    <Row>\n                        <Input\n                            s={7}\n                            placeholder=\"Enter the name of the fruit\"\n                            onChange={(event) => {this.handleOnChange(event)}}\n                        />\n                    </Row>\n                    <div className=\"row\">\n                        {this.state.fruits\n                            .filter(item => item.commonName.toUpperCase().includes(this.state.input))\n                            .map((item) => (\n                                <Col s={12} m={10} l={4}>\n                                    <PlantCards\n                                        key={item._id}\n                                        id={item._id} \n                                        commonName={item.commonName}\n                                        photo={item.photoURL}\n                                        zones={item.zone}\n                                        plantDetails={item.plantAttrURL}\n                                        variety={item.variety}\n                                        category={item.plantCategories[0]}\n                                    />\n                                </Col>\n                                )\n                            )\n                        }\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default FruitsDepartment;","import React, { Component } from 'react';\nimport Navbar from \"../components/Navbar\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Wrapper from \"../components/Wrapper\";\nimport BodyWraper from \"../components/BodyWrapper\";\nimport Greeting from \"../components/Greeting\";\nimport FruitsDepartment from \"../components/FruitsDepartment\";\nimport FooterDiv from \"../components/Footer\";\n\n\nclass Fruits extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Jumbotron>\n          <Navbar user={this.props.user} onChange={this.props.onChange} handleLogin={this.props.handleLogin} handleSignup={this.props.handleSignup} handleLogout={this.props.handleLogout}/>\n          <Greeting lineOne=\"Fruits\" />\n        </Jumbotron>\n        <BodyWraper>\n          <FruitsDepartment />\n        </BodyWraper>\n        <FooterDiv />\n      </Wrapper>\n    );\n  }\n}\n\nexport default Fruits;\n","import React from \"react\";\nimport API from \"../../utils/API\";\nimport PlantCards from \"../PlantCards\";\nimport { Pagination, Col, ProgressBar, Row, Input } from \"react-materialize\";\n\nclass VegeDepartment extends React.Component {\n    state = {\n        veges: [],\n        activeCards: [],\n        activePage: \"\",\n        pageItem: \"\",\n        loading: true,\n        plantNames: {},\n        input: \"\"\n    };\n\n    componentDidMount() {\n        let category = \"vegetables\";\n        this.loadVegetables(category);\n    }\n\n    loadVegetables(category) {\n        API.getCategory(category)\n            .then(res => {\n                // console.log(res.data);\n                this.setVegetables(res.data);\n                this.convertFunc(res.data);\n            })\n            .catch(err => console.log(err));\n    }\n\n    setVegetables(data) {\n        this.setState({veges: data});\n        this.setPageItem();\n        this.pushUpItems(0);\n    }\n\n    setActivePage(pageNum) {\n        this.setState({activePage: pageNum});\n    }\n\n    setPageItem() {\n        let itemNum;\n        if(this.state.veges.length < 18) {\n            itemNum = this.state.veges.length;\n            // console.log(itemNum);\n        }\n        else {\n            itemNum = 18;\n        }\n        let pageItem = Math.ceil(this.state.veges.length / itemNum);\n        // console.log(pageItem);\n        this.setState({pageItem: pageItem});\n    }\n\n    pushUpItems(event) {\n        if(event === 0) {\n            event = 1;\n        }\n        // console.log(event);\n        let length = event * 18;\n        let tempArray = [];\n        for(var i = (length - 18); i < length; i++) {\n            if(this.state.veges[i] !== undefined) {\n                tempArray.push(this.state.veges[i]);\n            }\n        }\n        // console.log(tempArray);\n        this.setState({ activeCards: tempArray });\n        this.setState({loading: false})\n\n        window.scrollTo(0, 0);\n    }\n\n    convertFunc(data) {\n\t\tlet plantNamesArr = [];\n\t\tdata.map(plant => {\n\t\t\tlet lowerCaseName = plant.commonName.toLowerCase();\n\t\t\tplantNamesArr.push(lowerCaseName);\n\t\t});\n\n\t\tconst plantNamesObj = {};\n\t\tfor(const key of plantNamesArr) {\n\t\t\tplantNamesObj[key] = null;\n\t\t}\n\n\t\tconsole.log(plantNamesObj);\n\t\tthis.setState({plantNames: plantNamesObj});\n    }\n    \n    handleOnChange(event) {\n        let inputPlant = event.target.value.toUpperCase();\n        this.setState({input: inputPlant})\n    }\n\n    render() {\n        if(this.state.input === \"\") {\n            return(\n                (this.state.loading ? \n                    <ProgressBar />\n                    :\n                    <div className=\"content\">\n                        <Row>\n                            <Input\n                                s={7}\n                                placeholder=\"Enter the name of the vegetable\"\n                                onChange={(event) => {this.handleOnChange(event)}}\n                            />\n                        </Row>\n                        <div className=\"row\">\n                            {this.state.activeCards.map(item => (\n                                <Col s={12} m={10} l={4}>\n                                    <PlantCards\n                                        key={item._id}\n                                        id={item._id} \n                                        commonName={item.commonName}\n                                        photo={item.photoURL}\n                                        zones={item.zone}\n                                        plantDetails={item.plantAttrURL}\n                                        variety={item.variety}\n                                        category={item.plantCategories[0]}\n                                    />\n                                </Col>\n                            ))}\n                        </div>\n                        <Pagination items={this.state.pageItem} activePage={this.state.activePage} maxButtons={this.state.pageItem} onSelect={(event) => this.pushUpItems(event)} />\n                    </div>\n                )\n            );\n        }\n        else {\n            return(\n                <div className=\"content\">\n                    <Row>\n                        <Input\n                            s={7}\n                            placeholder=\"Enter the name of the vegetable\"\n                            onChange={(event) => {this.handleOnChange(event)}}\n                        />\n                    </Row>\n                    <div className=\"row\">\n                        {this.state.veges\n                            .filter(item => item.commonName.toUpperCase().includes(this.state.input))\n                            .map((item) => (\n                                <Col s={12} m={10} l={4}>\n                                    <PlantCards\n                                        key={item._id}\n                                        id={item._id} \n                                        commonName={item.commonName}\n                                        photo={item.photoURL}\n                                        zones={item.zone}\n                                        plantDetails={item.plantAttrURL}\n                                        variety={item.variety}\n                                        category={item.plantCategories[0]}\n                                    />\n                                </Col>\n                                )\n                            )\n                        }\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default VegeDepartment;","import React, { Component } from 'react';\nimport Navbar from \"../components/Navbar\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Wrapper from \"../components/Wrapper\";\nimport BodyWraper from \"../components/BodyWrapper\";\nimport Greeting from \"../components/Greeting\";\nimport FooterDiv from \"../components/Footer\";\nimport VegeDepartment from \"../components/VegetablesDepartment\";\n\n\nclass Vegetables extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Jumbotron>\n          <Navbar user={this.props.user} onChange={this.props.onChange} handleLogin={this.props.handleLogin} handleSignup={this.props.handleSignup} handleLogout={this.props.handleLogout}/>\n          <Greeting lineOne=\"Vegetables\" />\n        </Jumbotron>\n        <BodyWraper>\n          <VegeDepartment />\n        </BodyWraper>\n        <FooterDiv />\n      </Wrapper>\n    );\n  }\n}\n\nexport default Vegetables;\n","import React from \"react\";\nimport API from \"../../utils/API\";\nimport PlantCards from \"../PlantCards\";\nimport { Pagination, Col, ProgressBar, Row, Input } from \"react-materialize\";\n\nclass HerbsDepartment extends React.Component {\n    state = {\n        herbs: [],\n        activeCards: [],\n        activePage: \"\",\n        pageItem: \"\",\n        loading: true,\n        plantNames: {},\n        input: \"\"\n    };\n\n    componentDidMount() {\n        let category = \"herbs\";\n        this.loadHerbs(category);\n    }\n\n    loadHerbs(category) {\n        API.getCategory(category)\n            .then(res => {\n                // console.log(res.data);\n                this.setHerbs(res.data);\n                this.convertFunc(res.data);\n            })\n            .catch(err => console.log(err));\n    }\n\n    setHerbs(data) {\n        this.setState({ herbs: data });\n        this.setPageItem();\n        this.pushUpItems(0);\n    }\n\n    setActivePage(pageNum) {\n        this.setState({activePage: pageNum});\n    }\n\n    setPageItem() {\n        let itemNum;\n        if(this.state.herbs.length < 18) {\n            itemNum = this.state.herbs.length;\n            // console.log(itemNum);\n        }\n        else {\n            itemNum = 18;\n        }\n        let pageItem = Math.ceil(this.state.herbs.length / itemNum);\n        // console.log(pageItem);\n        this.setState({pageItem: pageItem});\n    }\n\n    pushUpItems(event) {\n        if(event === 0) {\n            event = 1;\n        }\n        // console.log(event);\n        let length = event * 18;\n        let tempArray = [];\n        for(var i = (length - 18); i < length; i++) {\n            if(this.state.herbs[i] !== undefined) {\n                tempArray.push(this.state.herbs[i]);\n            }\n        }\n        // console.log(tempArray);\n        this.setState({ activeCards: tempArray });\n        this.setState({ loading: false });\n\n        window.scrollTo(0, 0);\n    }\n\n    convertFunc(data) {\n\t\tlet plantNamesArr = [];\n\t\tdata.map(plant => {\n\t\t\tlet lowerCaseName = plant.commonName.toLowerCase();\n\t\t\tplantNamesArr.push(lowerCaseName);\n\t\t});\n\n\t\tconst plantNamesObj = {};\n\t\tfor(const key of plantNamesArr) {\n\t\t\tplantNamesObj[key] = null;\n\t\t}\n\n\t\tconsole.log(plantNamesObj);\n\t\tthis.setState({plantNames: plantNamesObj});\n    }\n    \n    handleOnChange(event) {\n        let inputPlant = event.target.value.toUpperCase();\n        this.setState({input: inputPlant})\n    }\n\n    render() {\n        if(this.state.input === \"\") {\n            return(\n                (this.state.loading ? \n                    <ProgressBar />\n                    :\n                    <div className=\"content\">\n                        <Row>\n                            <Input\n                                s={7}\n                                placeholder=\"Enter the name of the herb\"\n                                onChange={(event) => {this.handleOnChange(event)}}\n                            />\n                        </Row>\n                        <div className=\"row\">\n                            {this.state.activeCards.map(item => (\n                                <Col s={12} m={10} l={4}>\n                                    <PlantCards\n                                        key={item._id}\n                                        id={item._id} \n                                        commonName={item.commonName}\n                                        photo={item.photoURL}\n                                        zones={item.zone}\n                                        plantDetails={item.plantAttrURL}\n                                        variety={item.variety}\n                                        category={item.plantCategories[0]}\n                                    />\n                                </Col>\n                            ))}\n                        </div>\n                        <Pagination items={this.state.pageItem} activePage={this.state.activePage} maxButtons={this.state.pageItem} onSelect={(event) => this.pushUpItems(event)} />\n                    </div>\n                )\n            );\n        }\n        else {\n            return(\n                <div className=\"content\">\n                    <Row>\n                        <Input\n                            s={7}\n                            placeholder=\"Enter the name of the herb\"\n                            onChange={(event) => {this.handleOnChange(event)}}\n                        />\n                    </Row>\n                    <div className=\"row\">\n                        {this.state.herbs\n                            .filter(item => item.commonName.toUpperCase().includes(this.state.input))\n                            .map((item) => (\n                                <Col s={12} m={10} l={4}>\n                                    <PlantCards\n                                        key={item._id}\n                                        id={item._id} \n                                        commonName={item.commonName}\n                                        photo={item.photoURL}\n                                        zones={item.zone}\n                                        plantDetails={item.plantAttrURL}\n                                        variety={item.variety}\n                                        category={item.plantCategories[0]}\n                                    />\n                                </Col>\n                                )\n                            )\n                        }\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default HerbsDepartment;","import React, { Component } from 'react';\nimport Navbar from \"../components/Navbar\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Wrapper from \"../components/Wrapper\";\nimport BodyWraper from \"../components/BodyWrapper\";\nimport Greeting from \"../components/Greeting\";\nimport FooterDiv from \"../components/Footer\";\nimport HerbsDepartment from \"../components/HerbsDepartment\";\n\n\nclass Herbs extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Jumbotron>\n          <Navbar user={this.props.user} onChange={this.props.onChange} handleLogin={this.props.handleLogin} handleSignup={this.props.handleSignup} handleLogout={this.props.handleLogout}/>\n          <Greeting lineOne=\"Herbs\" />\n        </Jumbotron>\n        <BodyWraper>\n          <HerbsDepartment />\n        </BodyWraper>\n        <FooterDiv />\n      </Wrapper>\n    );\n  }\n}\n\nexport default Herbs;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport PlantDetail from \"./pages/PlantDetail\";\nimport './App.css';\nimport Landing from \"./pages/landing\";\nimport Profile from \"./pages/Profile\";\nimport TeamProfile from \"./pages/teamProfile\";\nimport Flowers from \"./pages/flowers\";\nimport Fruits from \"./pages/fruits\";\nimport Vegetables from './pages/vegetables';\nimport Herbs from './pages/herbs';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\n// import $ from \"jquery\";\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      username: \"\",\n      password: \"\",\n      phone: \"\",\n      firstName: \"Friend\",\n      lastName: \"\",\n      zipcode: \"\",\n      city: \"\",\n      st: \"\",\n      aboutme: \"\",\n      profilepic: \"\",\n      coverphoto: \"\",\n      redirectTo: null,\n      loggedIn: false\n    }\n    this.handleSignup = this.handleSignup.bind(this)\n    this.handleLogin = this.handleLogin.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.handleLogout = this.handleLogout.bind(this)\n  }\n\n  componentDidMount() {\n    axios.get(\"/auth/user\").then((response) => {\n\n      if (response.data) {\n        this.setState({\n          _id: response.data._id,\n          username: response.data.username,\n          phone: response.data.phone,\n          firstName: response.data.firstName,\n          lastName: response.data.lastName,\n          zipcode: response.data.zipcode,\n          city: response.data.city,\n          st: response.data.st,\n          aboutme: response.data.aboutme,\n          profilepic: response.data.profilepic,\n          coverphoto: response.data.coverphoto,\n          redirectTo: null,\n          loggedIn: true\n        })\n      }\n    })\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n  handleSignup(event) {\n    event.preventDefault()\n    // TODO - validate!\n    axios.post(\"/auth/signup\", {\n      password: this.state.password,\n      username: this.state.username,\n      phone: this.state.phone,\n      firstName: this.state.firstName,\n      lastName: this.state.lastName,\n      zipcode: this.state.zipcode,\n      city: this.state.city,\n      st: this.state.st,\n      aboutme: this.state.aboutme,\n      profilepic: this.state.profilepic,\n      coverphoto: this.state.coverphoto\n\n    })\n      .then(response => {\n        // this.setState({redirectTo: \"/landing\"})\n        Swal.fire({\n          title: 'Account Created',\n          text: 'Please Login',\n          type: 'success',\n          showConfirmButton: false,\n          showCancelButton: false,\n          backdrop: true,\n          // toast: true,\n          timer: 1100,\n          // position: \"top-end\",\n          customClass: \"success-toast\"\n          // confirmButtonText: 'Ok'\n        });\n      })\n  }\n\n  handleLogin(event) {\n    event.preventDefault();\n\n    // $(\".modal-overlay\").toggle(\"modal-close\");\n\n\n    var loginModal = document.getElementById(\"login-modal\")\n    loginModal.classList.add(\"closeModal\");\n\n    var loginModalOverlay = document.getElementById(\"materialize-modal-overlay-1\");\n    loginModalOverlay.classList.add(\"closeModal\");\n    // loginModalOverlay.classList.remove(\"modal-overlay\")\n\n    axios.post(\"auth/login\", {\n      username: this.state.username,\n      password: this.state.password\n    }).then(response => {\n      this.setState({\n        _id: response.data._id,\n        username: response.data.username,\n        phone: response.data.phone,\n        firstName: response.data.firstName,\n        lastName: response.data.lastName,\n        zipcode: response.data.zipcode,\n        city: response.data.city,\n        st: response.data.st,\n        aboutme: response.data.aboutme,\n        profilepic: response.data.profilepic,\n        coverphoto: response.data.coverphoto,\n        redirectTo: \"/profile\",\n        loggedIn: true\n      })\n      if (response) {\n\n        Swal.fire({\n          title: 'Successfully Logged In',\n          type: 'success',\n          showConfirmButton: false,\n          showCancelButton: false,\n          backdrop: true,\n          // toast: true,\n          timer: 1100,\n          // position: \"top-end\",\n          customClass: \"success-toast\"\n          // confirmButtonText: 'Ok'\n        });\n      } else if (response.status === 401) {\n        Swal.fire({\n          title: 'Error Logging In',\n          type: 'error',\n          showConfirmButton: false,\n          showCancelButton: false,\n          // toast: true,\n          timer: 1000,\n          // position: \"top-end\",\n          customClass: \"fail-toast\"\n          // confirmButtonText: 'Ok'\n        });\n      }\n\n    }).then((response2) => {\n      this.setState({ redirectTo: null })\n    })\n  }\n\n  handleLogout(event) {\n    event.preventDefault();\n    axios.get(\"/auth/logout\")\n      .then((response) => {\n        console.log(response);\n        this.setState({\n          redirectTo: \"/\",\n          username: \"\",\n          password: \"\",\n          phone: \"\",\n          firstName: \"Friend\",\n          lastName: \"\",\n          zipcode: \"\",\n          city: \"\",\n          st: \"\",\n          aboutme: \"\",\n          profilepic: \"\",\n          coverphoto: \"\",\n          loggedIn: false\n        })\n        Swal.fire({\n          title: 'Successfully Logged Out',\n          type: 'success',\n          showConfirmButton: false,\n          showCancelButton: false,\n          backdrop: true,\n          // toast: true,\n          timer: 1100,\n          // position: \"top-end\",\n          // customClass: \"success-toast\"\n          // confirmButtonText: 'Ok'\n        });\n      }).then((response2) => {\n        this.setState({ redirectTo: null });\n      })\n  }\n\n\n\n  render() {\n\n    const PrivateRoute = ({ component: Component, ...rest }) => (\n      <Route {...rest} render={(props) => (\n        this.state.loggedIn === true\n          ? <Component {...props} user={this.state} handleLogout={this.handleLogout}/>\n          : <Redirect to='/' />\n      )} />\n    )\n\n    return (\n      <Router>\n        <div className=\"background\">\n          <Switch>\n            <Route exact path=\"/\" render={(props) => <Landing {...props} user={this.state} onChange={this.handleChange} handleLogin={this.handleLogin} handleSignup={this.handleSignup} handleLogout={this.handleLogout} />} />\n            <Route exact path=\"/landing\" render={(props) => <Landing {...props} user={this.state} onChange={this.handleChange} handleLogin={this.handleLogin} handleSignup={this.handleSignup} handleLogout={this.handleLogout} />} />\n            <PrivateRoute path=\"/profile\" component={Profile} />\n            <Route path=\"/teamprofile\" render={(props) => <TeamProfile {...props} user={this.state} onChange={this.handleChange} handleLogin={this.handleLogin} handleSignup={this.handleSignup} handleLogout={this.handleLogout} />} />\n            <Route path=\"/plantdetail\" render={(props) => <PlantDetail {...props} user={this.state} onChange={this.handleChange} handleLogin={this.handleLogin} handleSignup={this.handleSignup} handleLogout={this.handleLogout} />} />\n            <Route path=\"/flowers\" render={(props) => <Flowers {...props} user={this.state} onChange={this.handleChange} handleLogin={this.handleLogin} handleSignup={this.handleSignup} handleLogout={this.handleLogout} />} />\n            <Route path=\"/fruits\" render={(props) => <Fruits {...props} user={this.state} onChange={this.handleChange} handleLogin={this.handleLogin} handleSignup={this.handleSignup} handleLogout={this.handleLogout} />} />\n            <Route path=\"/vegetables\" render={(props) => <Vegetables {...props} user={this.state} onChange={this.handleChange} handleLogin={this.handleLogin} handleSignup={this.handleSignup} handleLogout={this.handleLogout} />} />\n            <Route path=\"/herbs\" render={(props) => <Herbs {...props} user={this.state} onChange={this.handleChange} handleLogin={this.handleLogin} handleSignup={this.handleSignup} handleLogout={this.handleLogout} />} />\n          </Switch>\n        </div>\n      </Router>\n\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}